{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/divider/style/css\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/tree/style/css\";\nimport _Tree from \"antd/es/tree\";\nvar _jsxFileName = \"/Users/flexiv/Downloads/react-admin-master/src/views/ShowView/Tree/Tree.jsx\";\nimport React, { Component } from 'react';\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb';\nconst TreeNode = _Tree.TreeNode;\nconst treeData = [{\n  title: '0-0',\n  key: '0-0',\n  children: [{\n    title: '0-0-0',\n    key: '0-0-0',\n    children: [{\n      title: '0-0-0-0',\n      key: '0-0-0-0'\n    }, {\n      title: '0-0-0-1',\n      key: '0-0-0-1'\n    }, {\n      title: '0-0-0-2',\n      key: '0-0-0-2'\n    }]\n  }, {\n    title: '0-0-1',\n    key: '0-0-1',\n    children: [{\n      title: '0-0-1-0',\n      key: '0-0-1-0'\n    }, {\n      title: '0-0-1-1',\n      key: '0-0-1-1'\n    }, {\n      title: '0-0-1-2',\n      key: '0-0-1-2'\n    }]\n  }, {\n    title: '0-0-2',\n    key: '0-0-2'\n  }]\n}, {\n  title: '0-1',\n  key: '0-1',\n  children: [{\n    title: '0-1-0-0',\n    key: '0-1-0-0'\n  }, {\n    title: '0-1-0-1',\n    key: '0-1-0-1'\n  }, {\n    title: '0-1-0-2',\n    key: '0-1-0-2'\n  }]\n}, {\n  title: '0-2',\n  key: '0-2'\n}];\nconst Search = _Input.Search;\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n  const children = [];\n\n  for (let i = 0; i < x; i++) {\n    const key = \"\".concat(preKey, \"-\").concat(i);\n    tns.push({\n      title: key,\n      key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nconst dataList = [];\n\nconst generateList = data => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const key = node.key;\n    dataList.push({\n      key,\n      title: key\n    });\n\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\n\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n  let parentKey;\n\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n\n    if (node.children) {\n      if (node.children.some(item => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n\n  return parentKey;\n};\n\nclass TreeView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expandedKeys: ['0-0-0', '0-0-1'],\n      autoExpandParent: true,\n      checkedKeys: ['0-0-0'],\n      selectedKeys: [],\n      searchValue: '',\n      gData\n    };\n\n    this.onDragEnter = info => {\n      console.log(info); // expandedKeys 需要受控时设置\n\n      this.setState({\n        expandedKeys: info.expandedKeys\n      });\n    };\n\n    this.onExpand = expandedKeys => {\n      console.log('onExpand', expandedKeys);\n      this.setState({\n        expandedKeys,\n        autoExpandParent: false\n      });\n    };\n\n    this.onDrop = info => {\n      console.log(info);\n      const dropKey = info.node.props.eventKey;\n      const dragKey = info.dragNode.props.eventKey;\n      const dropPos = info.node.props.pos.split('-');\n      const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n      const loop = (data, key, callback) => {\n        data.forEach((item, index, arr) => {\n          if (item.key === key) {\n            return callback(item, index, arr);\n          }\n\n          if (item.children) {\n            return loop(item.children, key, callback);\n          }\n        });\n      };\n\n      const data = [...this.state.gData]; // Find dragObject\n\n      let dragObj;\n      loop(data, dragKey, (item, index, arr) => {\n        arr.splice(index, 1);\n        dragObj = item;\n      });\n\n      if (!info.dropToGap) {\n        // Drop on the content\n        loop(data, dropKey, item => {\n          item.children = item.children || []; // where to insert 示例添加到尾部，可以是随意位置\n\n          item.children.push(dragObj);\n        });\n      } else if ((info.node.props.children || []).length > 0 && // Has children\n      info.node.props.expanded && // Is expanded\n      dropPosition === 1 // On the bottom gap\n      ) {\n          loop(data, dropKey, item => {\n            item.children = item.children || []; // where to insert 示例添加到尾部，可以是随意位置\n\n            item.children.unshift(dragObj);\n          });\n        } else {\n        let ar;\n        let i;\n        loop(data, dropKey, (item, index, arr) => {\n          ar = arr;\n          i = index;\n        });\n\n        if (dropPosition === -1) {\n          ar.splice(i, 0, dragObj);\n        } else {\n          ar.splice(i + 1, 0, dragObj);\n        }\n      }\n\n      this.setState({\n        gData: data\n      });\n    };\n\n    this.onCheck = checkedKeys => {\n      console.log('onCheck', checkedKeys);\n      this.setState({\n        checkedKeys\n      });\n    };\n\n    this.onSelect = (selectedKeys, info) => {\n      console.log('onSelect', info);\n      this.setState({\n        selectedKeys\n      });\n    };\n\n    this.renderTreeNodes = data => data.map(item => {\n      if (item.children) {\n        return React.createElement(TreeNode, {\n          title: item.title,\n          key: item.key,\n          dataRef: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, this.renderTreeNodes(item.children));\n      }\n\n      return React.createElement(TreeNode, Object.assign({\n        key: item.key\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }));\n    });\n\n    this.onChange = e => {\n      const value = e.target.value;\n      const expandedKeys = dataList.map(item => {\n        if (item.title.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n\n        return null;\n      }).filter((item, i, self) => item && self.indexOf(item) === i);\n      this.setState({\n        expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          searchValue = _this$state.searchValue,\n          expandedKeys = _this$state.expandedKeys,\n          autoExpandParent = _this$state.autoExpandParent;\n\n    const loopDrop = data => data.map(item => {\n      if (item.children && item.children.length) {\n        return React.createElement(TreeNode, {\n          key: item.key,\n          title: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, loop(item.children));\n      }\n\n      return React.createElement(TreeNode, {\n        key: item.key,\n        title: item.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      });\n    });\n\n    const loop = data => data.map(item => {\n      const index = item.title.indexOf(searchValue);\n      const beforeStr = item.title.substr(0, index);\n      const afterStr = item.title.substr(index + searchValue.length);\n      const title = index > -1 ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, beforeStr, React.createElement(\"span\", {\n        style: {\n          color: '#f50'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, searchValue), afterStr) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, item.title);\n\n      if (item.children) {\n        return React.createElement(TreeNode, {\n          key: item.key,\n          title: title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, loop(item.children));\n      }\n\n      return React.createElement(TreeNode, {\n        key: item.key,\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      });\n    });\n\n    return React.createElement(_Layout, {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(CustomBreadcrumb, {\n      arr: ['展示', '树形控件'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"\\u4F55\\u65F6\\u4F7F\\u7528\"), React.createElement(_Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"\\u6587\\u4EF6\\u5939\\u3001\\u7EC4\\u7EC7\\u67B6\\u6784\\u3001\\u751F\\u7269\\u5206\\u7C7B\\u3001\\u56FD\\u5BB6\\u5730\\u533A\\u7B49\\u7B49\\uFF0C\\u4E16\\u95F4\\u4E07\\u7269\\u7684\\u5927\\u591A\\u6570\\u7ED3\\u6784\\u90FD\\u662F\\u6811\\u5F62\\u7ED3\\u6784\\u3002\\u4F7F\\u7528 \\u6811\\u63A7\\u4EF6 \\u53EF\\u4EE5\\u5B8C\\u6574\\u5C55\\u73B0\\u5176\\u4E2D\\u7684\\u5C42\\u7EA7\\u5173\\u7CFB\\uFF0C\\u5E76\\u5177\\u6709\\u5C55\\u5F00\\u6536\\u8D77\\u9009\\u62E9\\u7B49\\u4EA4\\u4E92\\u529F\\u80FD\\u3002\")), React.createElement(_Row, {\n      gutter: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(_Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"\\u57FA\\u7840\\u7528\\u6CD5\"), React.createElement(_Tree, {\n      checkable: true,\n      showIcon: true,\n      defaultExpandedKeys: ['0-0-0', '0-0-1'],\n      defaultSelectedKeys: ['0-0-0', '0-0-1'],\n      defaultCheckedKeys: ['0-0-0', '0-0-1'],\n      onSelect: this.onSelect,\n      onCheck: this.onCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      title: \"parent 1\",\n      key: \"0-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      icon: React.createElement(_Icon, {\n        type: \"meh-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }),\n      title: \"parent 1-0\",\n      key: \"0-0-0\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      title: \"leaf\",\n      key: \"0-0-0-0\",\n      disableCheckbox: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(TreeNode, {\n      title: \"leaf\",\n      key: \"0-0-0-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(TreeNode, {\n      title: \"parent 1-1\",\n      key: \"0-0-1\",\n      icon: React.createElement(_Icon, {\n        type: \"meh-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#1890ff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"sss\"),\n      key: \"0-0-1-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(_Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"\\u53EF\\u641C\\u7D22\"), React.createElement(Search, {\n      style: {\n        marginBottom: 8\n      },\n      placeholder: \"Search\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(_Tree, {\n      showLine: true,\n      onExpand: this.onExpand,\n      expandedKeys: expandedKeys,\n      autoExpandParent: autoExpandParent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, loop(gData)))), React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(_Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"\\u53D7\\u63A7\\u63A7\\u4EF6\"), React.createElement(_Tree, {\n      checkable: true,\n      onExpand: this.onExpand,\n      expandedKeys: this.state.expandedKeys,\n      autoExpandParent: this.state.autoExpandParent,\n      onCheck: this.onCheck,\n      checkedKeys: this.state.checkedKeys,\n      onSelect: this.onSelect,\n      selectedKeys: this.state.selectedKeys,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, this.renderTreeNodes(treeData))), React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(_Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"\\u53EF\\u62D6\\u62FD\"), React.createElement(_Tree, {\n      className: \"draggable-tree\",\n      defaultExpandedKeys: this.state.expandedKeys,\n      draggable: true,\n      blockNode: true,\n      onDragEnter: this.onDragEnter,\n      onDrop: this.onDrop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, loopDrop(this.state.gData))))));\n  }\n\n}\n\nexport default TreeView;","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-admin-master/src/views/ShowView/Tree/Tree.jsx"],"names":["React","Component","CustomBreadcrumb","TreeNode","treeData","title","key","children","Search","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","i","push","level","forEach","index","dataList","generateList","data","length","node","getParentKey","tree","parentKey","some","item","TreeView","state","expandedKeys","autoExpandParent","checkedKeys","selectedKeys","searchValue","onDragEnter","info","console","log","setState","onExpand","onDrop","dropKey","props","eventKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","loop","callback","arr","dragObj","splice","dropToGap","expanded","unshift","ar","onCheck","onSelect","renderTreeNodes","map","onChange","e","value","target","indexOf","filter","self","render","loopDrop","beforeStr","substr","afterStr","color","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb'\nimport { Layout, Divider, Row, Col, Tree, Input, Icon } from 'antd'\n\nconst { TreeNode } = Tree\n\nconst treeData = [\n    {\n        title: '0-0',\n        key: '0-0',\n        children: [\n            {\n                title: '0-0-0',\n                key: '0-0-0',\n                children: [\n                    { title: '0-0-0-0', key: '0-0-0-0' },\n                    { title: '0-0-0-1', key: '0-0-0-1' },\n                    { title: '0-0-0-2', key: '0-0-0-2' }\n                ]\n            },\n            {\n                title: '0-0-1',\n                key: '0-0-1',\n                children: [\n                    { title: '0-0-1-0', key: '0-0-1-0' },\n                    { title: '0-0-1-1', key: '0-0-1-1' },\n                    { title: '0-0-1-2', key: '0-0-1-2' }\n                ]\n            },\n            {\n                title: '0-0-2',\n                key: '0-0-2'\n            }\n        ]\n    },\n    {\n        title: '0-1',\n        key: '0-1',\n        children: [\n            { title: '0-1-0-0', key: '0-1-0-0' },\n            { title: '0-1-0-1', key: '0-1-0-1' },\n            { title: '0-1-0-2', key: '0-1-0-2' }\n        ]\n    },\n    {\n        title: '0-2',\n        key: '0-2'\n    }\n]\n\nconst { Search } = Input\n\nconst x = 3\nconst y = 2\nconst z = 1\nconst gData = []\n\nconst generateData = (_level, _preKey, _tns) => {\n    const preKey = _preKey || '0'\n    const tns = _tns || gData\n\n    const children = []\n    for (let i = 0; i < x; i++) {\n        const key = `${preKey}-${i}`\n        tns.push({ title: key, key })\n        if (i < y) {\n            children.push(key)\n        }\n    }\n    if (_level < 0) {\n        return tns\n    }\n    const level = _level - 1\n    children.forEach((key, index) => {\n        tns[index].children = []\n        return generateData(level, key, tns[index].children)\n    })\n}\ngenerateData(z)\n\nconst dataList = []\nconst generateList = data => {\n    for (let i = 0; i < data.length; i++) {\n        const node = data[i]\n        const { key } = node\n        dataList.push({ key, title: key })\n        if (node.children) {\n            generateList(node.children)\n        }\n    }\n}\ngenerateList(gData)\n\nconst getParentKey = (key, tree) => {\n    let parentKey\n    for (let i = 0; i < tree.length; i++) {\n        const node = tree[i]\n        if (node.children) {\n            if (node.children.some(item => item.key === key)) {\n                parentKey = node.key\n            } else if (getParentKey(key, node.children)) {\n                parentKey = getParentKey(key, node.children)\n            }\n        }\n    }\n    return parentKey\n}\n\nclass TreeView extends Component {\n    state = {\n        expandedKeys: ['0-0-0', '0-0-1'],\n        autoExpandParent: true,\n        checkedKeys: ['0-0-0'],\n        selectedKeys: [],\n        searchValue: '',\n        gData\n    }\n\n    onDragEnter = info => {\n        console.log(info)\n        // expandedKeys 需要受控时设置\n        this.setState({\n            expandedKeys: info.expandedKeys\n        })\n    }\n\n    onExpand = expandedKeys => {\n        console.log('onExpand', expandedKeys)\n        this.setState({\n            expandedKeys,\n            autoExpandParent: false\n        })\n    }\n\n    onDrop = info => {\n        console.log(info)\n        const dropKey = info.node.props.eventKey\n        const dragKey = info.dragNode.props.eventKey\n        const dropPos = info.node.props.pos.split('-')\n        const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1])\n\n        const loop = (data, key, callback) => {\n            data.forEach((item, index, arr) => {\n                if (item.key === key) {\n                    return callback(item, index, arr)\n                }\n                if (item.children) {\n                    return loop(item.children, key, callback)\n                }\n            })\n        }\n        const data = [...this.state.gData]\n\n        // Find dragObject\n        let dragObj\n        loop(data, dragKey, (item, index, arr) => {\n            arr.splice(index, 1)\n            dragObj = item\n        })\n\n        if (!info.dropToGap) {\n            // Drop on the content\n            loop(data, dropKey, item => {\n                item.children = item.children || []\n                // where to insert 示例添加到尾部，可以是随意位置\n                item.children.push(dragObj)\n            })\n        } else if (\n            (info.node.props.children || []).length > 0 && // Has children\n            info.node.props.expanded && // Is expanded\n            dropPosition === 1 // On the bottom gap\n        ) {\n            loop(data, dropKey, item => {\n                item.children = item.children || []\n                // where to insert 示例添加到尾部，可以是随意位置\n                item.children.unshift(dragObj)\n            })\n        } else {\n            let ar\n            let i\n            loop(data, dropKey, (item, index, arr) => {\n                ar = arr\n                i = index\n            })\n            if (dropPosition === -1) {\n                ar.splice(i, 0, dragObj)\n            } else {\n                ar.splice(i + 1, 0, dragObj)\n            }\n        }\n\n        this.setState({\n            gData: data\n        })\n    }\n\n    onCheck = checkedKeys => {\n        console.log('onCheck', checkedKeys)\n        this.setState({ checkedKeys })\n    }\n\n    onSelect = (selectedKeys, info) => {\n        console.log('onSelect', info)\n        this.setState({ selectedKeys })\n    }\n\n    renderTreeNodes = data =>\n        data.map(item => {\n            if (item.children) {\n                return (\n                    <TreeNode title={item.title} key={item.key} dataRef={item}>\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                )\n            }\n            return <TreeNode key={item.key} {...item} />\n        })\n\n    onChange = e => {\n        const { value } = e.target\n        const expandedKeys = dataList\n            .map(item => {\n                if (item.title.indexOf(value) > -1) {\n                    return getParentKey(item.key, gData)\n                }\n                return null\n            })\n            .filter((item, i, self) => item && self.indexOf(item) === i)\n        this.setState({\n            expandedKeys,\n            searchValue: value,\n            autoExpandParent: true\n        })\n    }\n\n    render() {\n        const { searchValue, expandedKeys, autoExpandParent } = this.state\n        const loopDrop = data =>\n            data.map(item => {\n                if (item.children && item.children.length) {\n                    return (\n                        <TreeNode key={item.key} title={item.title}>\n                            {loop(item.children)}\n                        </TreeNode>\n                    )\n                }\n                return <TreeNode key={item.key} title={item.title} />\n            })\n        const loop = data =>\n            data.map(item => {\n                const index = item.title.indexOf(searchValue)\n                const beforeStr = item.title.substr(0, index)\n                const afterStr = item.title.substr(index + searchValue.length)\n                const title =\n                    index > -1 ? (\n                        <span>\n                            {beforeStr}\n                            <span style={{ color: '#f50' }}>{searchValue}</span>\n                            {afterStr}\n                        </span>\n                    ) : (\n                        <span>{item.title}</span>\n                    )\n                if (item.children) {\n                    return (\n                        <TreeNode key={item.key} title={title}>\n                            {loop(item.children)}\n                        </TreeNode>\n                    )\n                }\n                return <TreeNode key={item.key} title={title} />\n            })\n        return (\n            <Layout className='animated fadeIn'>\n                <div>\n                    <CustomBreadcrumb arr={['展示', '树形控件']}></CustomBreadcrumb>\n                </div>\n                <div className='base-style'>\n                    <h3>何时使用</h3>\n                    <Divider />\n                    <p>\n                        文件夹、组织架构、生物分类、国家地区等等，世间万物的大多数结构都是树形结构。使用 树控件\n                        可以完整展现其中的层级关系，并具有展开收起选择等交互功能。\n                    </p>\n                </div>\n                <Row gutter={8}>\n                    <Col span={12}>\n                        <div className='base-style'>\n                            <Divider orientation='left'>基础用法</Divider>\n                            <Tree\n                                checkable\n                                showIcon\n                                defaultExpandedKeys={['0-0-0', '0-0-1']}\n                                defaultSelectedKeys={['0-0-0', '0-0-1']}\n                                defaultCheckedKeys={['0-0-0', '0-0-1']}\n                                onSelect={this.onSelect}\n                                onCheck={this.onCheck}>\n                                <TreeNode title='parent 1' key='0-0'>\n                                    <TreeNode icon={<Icon type='meh-o' />} title='parent 1-0' key='0-0-0' disabled>\n                                        <TreeNode title='leaf' key='0-0-0-0' disableCheckbox />\n                                        <TreeNode title='leaf' key='0-0-0-1' />\n                                    </TreeNode>\n                                    <TreeNode title='parent 1-1' key='0-0-1' icon={<Icon type='meh-o' />}>\n                                        <TreeNode title={<span style={{ color: '#1890ff' }}>sss</span>} key='0-0-1-0' />\n                                    </TreeNode>\n                                </TreeNode>\n                            </Tree>\n                        </div>\n                        <div className='base-style'>\n                            <Divider orientation='left'>可搜索</Divider>\n                            <Search style={{ marginBottom: 8 }} placeholder='Search' onChange={this.onChange} />\n                            <Tree\n                                showLine\n                                onExpand={this.onExpand}\n                                expandedKeys={expandedKeys}\n                                autoExpandParent={autoExpandParent}>\n                                {loop(gData)}\n                            </Tree>\n                        </div>\n                    </Col>\n                    <Col span={12}>\n                        <div className='base-style'>\n                            <Divider orientation='left'>受控控件</Divider>\n                            <Tree\n                                checkable\n                                onExpand={this.onExpand}\n                                expandedKeys={this.state.expandedKeys}\n                                autoExpandParent={this.state.autoExpandParent}\n                                onCheck={this.onCheck}\n                                checkedKeys={this.state.checkedKeys}\n                                onSelect={this.onSelect}\n                                selectedKeys={this.state.selectedKeys}>\n                                {this.renderTreeNodes(treeData)}\n                            </Tree>\n                        </div>\n                        <div className='base-style'>\n                            <Divider orientation='left'>可拖拽</Divider>\n                            <Tree\n                                className='draggable-tree'\n                                defaultExpandedKeys={this.state.expandedKeys}\n                                draggable\n                                blockNode\n                                onDragEnter={this.onDragEnter}\n                                onDrop={this.onDrop}>\n                                {loopDrop(this.state.gData)}\n                            </Tree>\n                        </div>\n                    </Col>\n                </Row>\n            </Layout>\n        )\n    }\n}\n\nexport default TreeView\n"]},"metadata":{},"sourceType":"module"}