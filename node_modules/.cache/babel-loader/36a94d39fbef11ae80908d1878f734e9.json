{"ast":null,"code":"import invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server'; // see http://w3c.github.io/html/syntax.html#writing-html-documents-elements\n\nvar VOID_TAGS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\nexport default function splitReactElement(element) {\n  if (VOID_TAGS.indexOf(element.type) !== -1) {\n    return ReactDOMServer.renderToStaticMarkup(element);\n  }\n\n  var tags = ReactDOMServer.renderToStaticMarkup(React.cloneElement(element, {}, '\\r')).split('\\r');\n  invariant(tags.length > 1, \"convertToHTML: Element of type \".concat(element.type, \" must render children\"));\n  invariant(tags.length < 3, \"convertToHTML: Element of type \".concat(element.type, \" cannot use carriage return character\"));\n  return {\n    start: tags[0],\n    end: tags[1]\n  };\n}","map":null,"metadata":{},"sourceType":"module"}