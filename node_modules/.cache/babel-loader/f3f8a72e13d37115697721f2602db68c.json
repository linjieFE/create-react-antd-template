{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/login/index.jsx\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport DocumentTitle from \"react-document-title\";\nimport \"./index.less\";\nimport { login, getUserInfo } from \"@/store/actions\";\n\nconst Login = props => {\n  const {\n    form,\n    token,\n    login,\n    getUserInfo\n  } = props;\n  const {\n    getFieldDecorator\n  } = form;\n  const [loading, setLoading] = useState(false);\n\n  const handleLogin = (username, password) => {\n    // 登录完成后 发送请求 调用接口获取用户信息\n    setLoading(true);\n    login(username, password).then(data => {\n      _message.success(\"登录成功\");\n\n      handleUserInfo(data.token);\n    }).catch(error => {\n      setLoading(false);\n\n      _message.error(error);\n    });\n  }; // 获取用户信息\n\n\n  const handleUserInfo = token => {\n    getUserInfo(token).then(data => {}).catch(error => {\n      _message.error(error);\n    });\n  };\n\n  const handleSubmit = event => {\n    // 阻止事件的默认行为\n    event.preventDefault(); // 对所有表单字段进行检验\n\n    form.validateFields((err, values) => {\n      // 检验成功\n      if (!err) {\n        const {\n          username,\n          password\n        } = values;\n        handleLogin(username, password);\n      } else {\n        console.log(\"检验失败!\");\n      }\n    });\n  };\n\n  if (token) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(DocumentTitle, {\n    title: \"用户登录\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    onSubmit: handleSubmit,\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"\\u7528\\u6237\\u767B\\u5F55\")), /*#__PURE__*/React.createElement(_Spin, {\n    spinning: loading,\n    tip: \"\\u767B\\u5F55\\u4E2D...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, getFieldDecorator(\"username\", {\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"请输入用户名\"\n    }],\n    initialValue: \"admin\" // 初始值\n\n  })( /*#__PURE__*/React.createElement(_Input, {\n    prefix: /*#__PURE__*/React.createElement(_Icon, {\n      type: \"user\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }),\n    placeholder: \"\\u7528\\u6237\\u540D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, getFieldDecorator(\"password\", {\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"请输入密码\"\n    }],\n    initialValue: \"123456\" // 初始值\n\n  })( /*#__PURE__*/React.createElement(_Input, {\n    prefix: /*#__PURE__*/React.createElement(_Icon, {\n      type: \"lock\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }),\n    type: \"password\",\n    placeholder: \"\\u5BC6\\u7801\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"\\u767B\\u5F55\")), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"\\u8D26\\u53F7 : admin \\u5BC6\\u7801 : \\u968F\\u4FBF\\u586B\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"\\u8D26\\u53F7 : editor \\u5BC6\\u7801 : \\u968F\\u4FBF\\u586B\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"\\u8D26\\u53F7 : guest \\u5BC6\\u7801 : \\u968F\\u4FBF\\u586B\"))))));\n};\n\nconst WrapLogin = _Form.create()(Login);\n\nexport default connect(state => state.user, {\n  login,\n  getUserInfo\n})(WrapLogin);","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/login/index.jsx"],"names":["React","useState","Redirect","connect","DocumentTitle","login","getUserInfo","Login","props","form","token","getFieldDecorator","loading","setLoading","handleLogin","username","password","then","data","success","handleUserInfo","catch","error","handleSubmit","event","preventDefault","validateFields","err","values","console","log","rules","required","whitespace","message","initialValue","color","WrapLogin","create","state","user"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Icon, Input, Button, message, Spin } from \"antd\";\nimport { connect } from \"react-redux\";\nimport DocumentTitle from \"react-document-title\";\nimport \"./index.less\";\nimport { login, getUserInfo } from \"@/store/actions\";\n\nconst Login = (props) => {\n  const { form, token, login, getUserInfo } = props;\n  const { getFieldDecorator } = form;\n\n  const [loading, setLoading] = useState(false);\n\n  const handleLogin = (username, password) => {\n    // 登录完成后 发送请求 调用接口获取用户信息\n    setLoading(true);\n    login(username, password)\n      .then((data) => {\n        message.success(\"登录成功\");\n        handleUserInfo(data.token);\n      })\n      .catch((error) => {\n        setLoading(false);\n        message.error(error);\n      });\n  };\n\n  // 获取用户信息\n  const handleUserInfo = (token) => {\n    getUserInfo(token)\n      .then((data) => {})\n      .catch((error) => {\n        message.error(error);\n      });\n  };\n\n  const handleSubmit = (event) => {\n    // 阻止事件的默认行为\n    event.preventDefault();\n\n    // 对所有表单字段进行检验\n    form.validateFields((err, values) => {\n      // 检验成功\n      if (!err) {\n        const { username, password } = values;\n        handleLogin(username, password);\n      } else {\n        console.log(\"检验失败!\");\n      }\n    });\n  };\n\n  if (token) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <DocumentTitle title={\"用户登录\"}>\n      <div className=\"login-container\">\n        <Form onSubmit={handleSubmit} className=\"content\">\n          <div className=\"title\">\n            <h2>用户登录</h2>\n          </div>\n          <Spin spinning={loading} tip=\"登录中...\">\n            <Form.Item>\n              {getFieldDecorator(\"username\", {\n                rules: [\n                  {\n                    required: true,\n                    whitespace: true,\n                    message: \"请输入用户名\",\n                  },\n                ],\n                initialValue: \"admin\", // 初始值\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"用户名\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  {\n                    required: true,\n                    whitespace: true,\n                    message: \"请输入密码\",\n                  },\n                ],\n                initialValue: \"123456\", // 初始值\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"密码\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                登录\n              </Button>\n            </Form.Item>\n            <Form.Item>\n              <span>账号 : admin 密码 : 随便填</span>\n              <br />\n              <span>账号 : editor 密码 : 随便填</span>\n              <br />\n              <span>账号 : guest 密码 : 随便填</span>\n            </Form.Item>\n          </Spin>\n        </Form>\n      </div>\n    </DocumentTitle>\n  );\n};\n\nconst WrapLogin = Form.create()(Login);\n\nexport default connect((state) => state.user, { login, getUserInfo })(\n  WrapLogin\n);\n"]},"metadata":{},"sourceType":"module"}