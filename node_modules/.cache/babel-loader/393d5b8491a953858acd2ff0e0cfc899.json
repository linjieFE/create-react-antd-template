{"ast":null,"code":"var _jsxFileName = \"/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/dashboard/components/BarChart/index.jsx\";\nimport React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\n\nclass BarChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chart: null\n    };\n  }\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n\n    if (nextProps.chartData !== this.props.chartData) {\n      debounce(this.initChart.bind(this), 300)();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n\n    this.setState({\n      chart: null\n    });\n  }\n\n  setOptions() {\n    const animationDuration = 3000;\n    this.state.chart.setOption({\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          // 坐标轴指示器，坐标轴触发有效\n          type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n\n        }\n      },\n      grid: {\n        top: 10,\n        left: \"2%\",\n        right: \"2%\",\n        bottom: \"3%\",\n        containLabel: true\n      },\n      xAxis: [{\n        type: \"category\",\n        data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n        axisTick: {\n          alignWithLabel: true\n        }\n      }],\n      yAxis: [{\n        type: \"value\",\n        axisTick: {\n          show: false\n        }\n      }],\n      series: [{\n        name: \"pageA\",\n        type: \"bar\",\n        stack: \"vistors\",\n        barWidth: \"60%\",\n        data: [79, 52, 200, 334, 390, 330, 220],\n        animationDuration\n      }, {\n        name: \"pageB\",\n        type: \"bar\",\n        stack: \"vistors\",\n        barWidth: \"60%\",\n        data: [80, 52, 200, 334, 390, 330, 220],\n        animationDuration\n      }, {\n        name: \"pageC\",\n        type: \"bar\",\n        stack: \"vistors\",\n        barWidth: \"60%\",\n        data: [30, 52, 200, 334, 390, 330, 220],\n        animationDuration\n      }]\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({\n      chart: echarts.init(this.el, \"macarons\")\n    }, () => {\n      this.setOptions(this.props.chartData);\n    });\n  }\n\n  render() {\n    const {\n      className,\n      height,\n      width,\n      styles\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      ref: el => this.el = el,\n      style: { ...styles,\n        height,\n        width\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nBarChart.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  className: PropTypes.string,\n  styles: PropTypes.object\n};\nBarChart.defaultProps = {\n  width: \"100%\",\n  height: \"300px\",\n  styles: {},\n  className: \"\"\n};\nexport default connect(state => state.app)(BarChart);","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/dashboard/components/BarChart/index.jsx"],"names":["React","Component","PropTypes","connect","echarts","debounce","BarChart","state","chart","componentDidMount","initChart","bind","window","addEventListener","resize","componentWillReceiveProps","nextProps","sidebarCollapsed","props","chartData","componentWillUnmount","dispose","removeEventListener","setState","setOptions","animationDuration","setOption","tooltip","trigger","axisPointer","type","grid","top","left","right","bottom","containLabel","xAxis","data","axisTick","alignWithLabel","yAxis","show","series","name","stack","barWidth","el","init","render","className","height","width","styles","propTypes","string","object","defaultProps","app"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\n\nclass BarChart extends Component {\n  static propTypes = {\n    width: PropTypes.string,\n    height: PropTypes.string,\n    className: PropTypes.string,\n    styles: PropTypes.object,\n  };\n  static defaultProps = {\n    width: \"100%\",\n    height: \"300px\",\n    styles: {},\n    className: \"\",\n  };\n  state = {\n    chart: null,\n  };\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n    if (nextProps.chartData !== this.props.chartData) {\n      debounce(this.initChart.bind(this), 300)();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n    this.setState({ chart: null });\n  }\n\n  setOptions() {\n    const animationDuration = 3000;\n    this.state.chart.setOption({\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          // 坐标轴指示器，坐标轴触发有效\n          type: \"shadow\", // 默认为直线，可选为：'line' | 'shadow'\n        },\n      },\n      grid: {\n        top: 10,\n        left: \"2%\",\n        right: \"2%\",\n        bottom: \"3%\",\n        containLabel: true,\n      },\n      xAxis: [\n        {\n          type: \"category\",\n          data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n          axisTick: {\n            alignWithLabel: true,\n          },\n        },\n      ],\n      yAxis: [\n        {\n          type: \"value\",\n          axisTick: {\n            show: false,\n          },\n        },\n      ],\n      series: [\n        {\n          name: \"pageA\",\n          type: \"bar\",\n          stack: \"vistors\",\n          barWidth: \"60%\",\n          data: [79, 52, 200, 334, 390, 330, 220],\n          animationDuration,\n        },\n        {\n          name: \"pageB\",\n          type: \"bar\",\n          stack: \"vistors\",\n          barWidth: \"60%\",\n          data: [80, 52, 200, 334, 390, 330, 220],\n          animationDuration,\n        },\n        {\n          name: \"pageC\",\n          type: \"bar\",\n          stack: \"vistors\",\n          barWidth: \"60%\",\n          data: [30, 52, 200, 334, 390, 330, 220],\n          animationDuration,\n        },\n      ],\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({ chart: echarts.init(this.el, \"macarons\") }, () => {\n      this.setOptions(this.props.chartData);\n    });\n  }\n\n  render() {\n    const { className, height, width, styles } = this.props;\n    return (\n      <div\n        className={className}\n        ref={(el) => (this.el = el)}\n        style={{\n          ...styles,\n          height,\n          width,\n        }}\n      />\n    );\n  }\n}\n\nexport default connect((state) => state.app)(BarChart);\n"]},"metadata":{},"sourceType":"module"}