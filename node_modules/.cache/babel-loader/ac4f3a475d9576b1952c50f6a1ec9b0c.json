{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/divider/style/css\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/notification/style/css\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/flexiv/Downloads/react-admin-master/src/views/Login/Login.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'; // import axios from '../../api'\n// import { API } from '../../api/config'\n\nimport '../../style/view-style/login.scss';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.enterLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          // let { username, password } = values\n          // axios\n          //     .post(`${API}/login`, { username, password })\n          //     .then(res => {\n          //         if (res.data.code === 0) {\n          //             localStorage.setItem('user', JSON.stringify(res.data.data.user))\n          //             localStorage.setItem('token', res.data.data.token)\n          //             this.props.history.push('/')\n          //             message.success('登录成功!')\n          //         } else {\n          //             // 这里处理一些错误信息\n          //         }\n          //     })\n          //     .catch(err => {})\n          // 这里可以做权限校验 模拟接口返回用户权限标识\n          switch (values.username) {\n            case 'admin':\n              values.auth = 0;\n              break;\n\n            default:\n              values.auth = 1;\n          }\n\n          localStorage.setItem('user', JSON.stringify(values));\n          this.enterLoading();\n          this.timer = setTimeout(() => {\n            _message.success('登录成功!');\n\n            this.props.history.push('/');\n          }, 2000);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    _notification.open({\n      message: '欢迎使用后台管理平台',\n      duration: null,\n      description: '账号 admin(管理员) 其他(游客) 密码随意'\n    });\n  }\n\n  componentWillUnmount() {\n    _notification.destroy();\n\n    this.timer && clearTimeout(this.timer);\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(_Layout, {\n      className: \"login animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\"), React.createElement(_Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: '请输入用户名!'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      placeholder: \"\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\"))))));\n  }\n\n}\n\nexport default withRouter(_Form.create()(Login));","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-admin-master/src/views/Login/Login.jsx"],"names":["React","Component","withRouter","Login","state","loading","enterLoading","setState","handleSubmit","e","preventDefault","props","form","validateFields","err","values","username","auth","localStorage","setItem","JSON","stringify","timer","setTimeout","success","history","push","componentDidMount","open","message","duration","description","componentWillUnmount","destroy","clearTimeout","render","getFieldDecorator","rules","required","color","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Layout, Input, Icon, Form, Button, Divider, message, notification } from 'antd'\nimport { withRouter } from 'react-router-dom'\n// import axios from '../../api'\n// import { API } from '../../api/config'\nimport '../../style/view-style/login.scss'\n\nclass Login extends Component {\n    state = {\n        loading: false\n    }\n\n    enterLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                // let { username, password } = values\n                // axios\n                //     .post(`${API}/login`, { username, password })\n                //     .then(res => {\n                //         if (res.data.code === 0) {\n                //             localStorage.setItem('user', JSON.stringify(res.data.data.user))\n                //             localStorage.setItem('token', res.data.data.token)\n                //             this.props.history.push('/')\n                //             message.success('登录成功!')\n                //         } else {\n                //             // 这里处理一些错误信息\n                //         }\n                //     })\n                //     .catch(err => {})\n\n                // 这里可以做权限校验 模拟接口返回用户权限标识\n                switch (values.username) {\n                    case 'admin':\n                        values.auth = 0\n                        break\n                    default:\n                        values.auth = 1\n                }\n\n                localStorage.setItem('user', JSON.stringify(values))\n                this.enterLoading()\n                this.timer = setTimeout(() => {\n                    message.success('登录成功!')\n                    this.props.history.push('/')\n                }, 2000)\n            }\n        })\n    }\n\n    componentDidMount() {\n        notification.open({\n            message: '欢迎使用后台管理平台',\n            duration: null,\n            description: '账号 admin(管理员) 其他(游客) 密码随意'\n        })\n    }\n\n    componentWillUnmount() {\n        notification.destroy()\n        this.timer && clearTimeout(this.timer)\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n        return (\n            <Layout className='login animated fadeIn'>\n                <div className='model'>\n                    <div className='login-form'>\n                        <h3>后台管理系统</h3>\n                        <Divider />\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Item>\n                                {getFieldDecorator('username', {\n                                    rules: [{ required: true, message: '请输入用户名!' }]\n                                })(\n                                    <Input\n                                        prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                        placeholder='用户名'\n                                    />\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('password', {\n                                    rules: [{ required: true, message: '请输入密码' }]\n                                })(\n                                    <Input\n                                        prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                        type='password'\n                                        placeholder='密码'\n                                    />\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                <Button\n                                    type='primary'\n                                    htmlType='submit'\n                                    className='login-form-button'\n                                    loading={this.state.loading}>\n                                    登录\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nexport default withRouter(Form.create()(Login))\n"]},"metadata":{},"sourceType":"module"}