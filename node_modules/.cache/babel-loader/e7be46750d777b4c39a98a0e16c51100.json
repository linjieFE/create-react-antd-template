{"ast":null,"code":"import getLastEvent from '../utils/getLastEvent';\nimport getSelector from '../utils/getSelector';\nimport tracker from '../utils/tracker'; // 定义的错误类型码\n\nconst ERROR_RUNTIME = 1;\nconst ERROR_SCRIPT = 2;\nconst ERROR_STYLE = 3;\nconst ERROR_IMAGE = 4;\nconst ERROR_AUDIO = 5;\nconst ERROR_VIDEO = 6;\nconst ERROR_CONSOLE = 7;\nconst ERROR_TRY_CATHC = 8;\nconst LOAD_ERROR_TYPE = {\n  SCRIPT: ERROR_SCRIPT,\n  LINK: ERROR_STYLE,\n  IMG: ERROR_IMAGE,\n  AUDIO: ERROR_AUDIO,\n  VIDEO: ERROR_VIDEO\n};\nconst JS_TRACKER_ERROR_DISPLAY_MAP = {\n  1: 'JS_RUNTIME_ERROR',\n  2: 'SCRIPT_LOAD_ERROR',\n  3: 'CSS_LOAD_ERROR',\n  4: 'IMAGE_LOAD_ERROR',\n  5: 'AUDIO_LOAD_ERROR',\n  6: 'VIDEO_LOAD_ERROR',\n  7: 'CONSOLE_ERROR',\n  8: 'TRY_CATCH_ERROR'\n};\nexport function injectJsError() {\n  //监听全局未捕获的错误\n  window.addEventListener('error', function (event) {\n    //错误事件对象\n    let lastEvent = getLastEvent(); //最后一个交互事件\n    //这是一个脚本加载错误\n\n    const errorTarget = event.target;\n\n    if (errorTarget !== window && errorTarget.nodeName && LOAD_ERROR_TYPE[errorTarget.nodeName.toUpperCase()]) {\n      tracker.send({\n        kind: 'stability',\n        //监控指标的大类\n        errorType: JS_TRACKER_ERROR_DISPLAY_MAP[LOAD_ERROR_TYPE[errorTarget.nodeName.toUpperCase()]],\n        //js或css资源加载错误\n        desc: errorTarget.baseURI + '@' + (errorTarget.src || errorTarget.href),\n        stack: 'no stack',\n        selector: getSelector(errorTarget) //代表最后一个操作的元素\n\n      });\n    } else {\n      const {\n        message,\n        filename,\n        lineno,\n        colno,\n        error\n      } = event;\n      tracker.send({\n        kind: 'stability',\n        //监控指标的大类\n        errorType: JS_TRACKER_ERROR_DISPLAY_MAP[ERROR_RUNTIME],\n        //JS执行错误\n        desc: `${message} at ${filename}:${lineno}:${colno}`,\n        stack: error && error.stack ? error.stack : 'no stack',\n        selector: lastEvent ? getSelector(lastEvent.path) : '' //代表最后一个操作的元素\n\n      });\n    }\n  }, true);\n  window.addEventListener('unhandledrejection', event => {\n    let lastEvent = getLastEvent(); //最后一个交互事件\n\n    let message;\n    let filename;\n    let lineno = 0;\n    let colno = 0;\n    let stack = '';\n    let reason = event.reason;\n\n    if (typeof reason === 'string') {\n      message = reason;\n    } else if (typeof reason === 'object') {\n      //说明是一个错误对象\n      message = reason.message;\n\n      if (reason.stack) {\n        let matchResult = reason.stack.match(/at\\s+(.+):(\\d+):(\\d+)/);\n        filename = matchResult[1];\n        lineno = matchResult[2];\n        colno = matchResult[3];\n      }\n\n      stack = reason.stack;\n    }\n\n    tracker.send({\n      kind: 'stability',\n      //监控指标的大类\n      errorType: JS_TRACKER_ERROR_DISPLAY_MAP[ERROR_RUNTIME],\n      //JS执行错误\n      desc: `${message} at ${filename}:${lineno}:${colno}`,\n      stack,\n      selector: lastEvent ? getSelector(lastEvent.path) : '' //代表最后一个操作的元素\n\n    });\n  }, true);\n}","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/lib/monitor/lib/jsError.js"],"names":["getLastEvent","getSelector","tracker","ERROR_RUNTIME","ERROR_SCRIPT","ERROR_STYLE","ERROR_IMAGE","ERROR_AUDIO","ERROR_VIDEO","ERROR_CONSOLE","ERROR_TRY_CATHC","LOAD_ERROR_TYPE","SCRIPT","LINK","IMG","AUDIO","VIDEO","JS_TRACKER_ERROR_DISPLAY_MAP","injectJsError","window","addEventListener","event","lastEvent","errorTarget","target","nodeName","toUpperCase","send","kind","errorType","desc","baseURI","src","href","stack","selector","message","filename","lineno","colno","error","path","reason","matchResult","match"],"mappings":"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","sourcesContent":["\nimport getLastEvent from '../utils/getLastEvent';\nimport getSelector from '../utils/getSelector';\nimport tracker from '../utils/tracker';\n\n// 定义的错误类型码\nconst ERROR_RUNTIME = 1\nconst ERROR_SCRIPT = 2\nconst ERROR_STYLE = 3\nconst ERROR_IMAGE = 4\nconst ERROR_AUDIO = 5\nconst ERROR_VIDEO = 6\nconst ERROR_CONSOLE = 7\nconst ERROR_TRY_CATHC = 8\n\nconst LOAD_ERROR_TYPE = {\n  SCRIPT: ERROR_SCRIPT,\n  LINK: ERROR_STYLE,\n  IMG: ERROR_IMAGE,\n  AUDIO: ERROR_AUDIO,\n  VIDEO: ERROR_VIDEO\n}\n\nconst JS_TRACKER_ERROR_DISPLAY_MAP = {\n  1: 'JS_RUNTIME_ERROR',\n  2: 'SCRIPT_LOAD_ERROR',\n  3: 'CSS_LOAD_ERROR',\n  4: 'IMAGE_LOAD_ERROR',\n  5: 'AUDIO_LOAD_ERROR',\n  6: 'VIDEO_LOAD_ERROR',\n  7: 'CONSOLE_ERROR',\n  8: 'TRY_CATCH_ERROR'\n}\n\nexport function injectJsError() {\n    //监听全局未捕获的错误\n    window.addEventListener('error', function (event) {//错误事件对象\n        let lastEvent = getLastEvent();//最后一个交互事件\n        //这是一个脚本加载错误\n        const errorTarget = event.target\n        if (errorTarget !== window && errorTarget.nodeName && LOAD_ERROR_TYPE[errorTarget.nodeName.toUpperCase()]) {\n          tracker.send({\n            kind: 'stability',//监控指标的大类\n            errorType: JS_TRACKER_ERROR_DISPLAY_MAP[LOAD_ERROR_TYPE[errorTarget.nodeName.toUpperCase()]],//js或css资源加载错误\n            desc: errorTarget.baseURI + '@' + (errorTarget.src || errorTarget.href),\n            stack: 'no stack',\n            selector: getSelector(errorTarget) //代表最后一个操作的元素\n          });\n        } else {\n          const { message, filename, lineno, colno, error } = event;\n          tracker.send({\n            kind: 'stability',//监控指标的大类\n            errorType: JS_TRACKER_ERROR_DISPLAY_MAP[ERROR_RUNTIME],//JS执行错误\n            desc:`${message} at ${filename}:${lineno}:${colno}`,\n            stack: error && error.stack ? error.stack : 'no stack',\n            selector: lastEvent ? getSelector(lastEvent.path) : '' //代表最后一个操作的元素\n          });\n        }\n    }, true);\n    window.addEventListener('unhandledrejection', (event) => {\n        let lastEvent = getLastEvent();//最后一个交互事件\n        let message;\n        let filename;\n        let lineno = 0;\n        let colno = 0;\n        let stack = '';\n        let reason = event.reason;\n        if (typeof reason === 'string') {\n          message = reason;\n        } else if (typeof reason === 'object') {//说明是一个错误对象\n          message = reason.message;\n          if (reason.stack) {\n            let matchResult = reason.stack.match(/at\\s+(.+):(\\d+):(\\d+)/);\n            filename = matchResult[1];\n            lineno = matchResult[2];\n            colno = matchResult[3];\n          }\n          stack = reason.stack;\n        }\n        tracker.send({\n          kind: 'stability',//监控指标的大类\n          errorType: JS_TRACKER_ERROR_DISPLAY_MAP[ERROR_RUNTIME],//JS执行错误\n          desc:`${message} at ${filename}:${lineno}:${colno}`,\n          stack,\n          selector: lastEvent ? getSelector(lastEvent.path) : '' //代表最后一个操作的元素\n        });\n    }, true);\n}"]},"metadata":{},"sourceType":"module"}