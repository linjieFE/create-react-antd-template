{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nvar _jsxFileName = \"/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/dashboard/components/TransactionTable/index.jsx\";\nimport React, { Component } from \"react\";\nimport { transactionList } from \"@/api/remoteSearch\";\nconst columns = [{\n  title: \"Order_No\",\n  dataIndex: \"order_no\",\n  key: \"order_no\",\n  width: 200\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  key: \"price\",\n  width: 195,\n  render: text => `$${text}`\n}, {\n  title: \"Status\",\n  key: \"tag\",\n  dataIndex: \"tag\",\n  width: 100,\n  render: tag => /*#__PURE__*/React.createElement(_Tag, {\n    color: tag === \"pending\" ? \"magenta\" : \"green\",\n    key: tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, tag)\n}];\n\nclass TransactionTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      list: []\n    };\n\n    this.fetchData = () => {\n      transactionList().then(response => {\n        const list = response.data.data.items.slice(0, 13);\n\n        if (this._isMounted) {\n          this.setState({\n            list\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(_Table, {\n      columns: columns,\n      dataSource: this.state.list,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default TransactionTable;","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/dashboard/components/TransactionTable/index.jsx"],"names":["React","Component","transactionList","columns","title","dataIndex","key","width","render","text","tag","TransactionTable","_isMounted","state","list","fetchData","then","response","data","items","slice","setState","componentDidMount","componentWillUnmount"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,GAAG,EAAE,UAHP;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADc,EAOd;AACEH,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE,OAHP;AAIEC,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,MAAM,EAAEC,IAAI,IAAM,IAAGA,IAAK;AAL5B,CAPc,EAcd;AACEL,EAAAA,KAAK,EAAE,QADT;AAEEE,EAAAA,GAAG,EAAE,KAFP;AAGED,EAAAA,SAAS,EAAE,KAHb;AAIEE,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,MAAM,EAAGE,GAAD,iBACN;AAAK,IAAA,KAAK,EAAEA,GAAG,KAAK,SAAR,GAAoB,SAApB,GAAgC,OAA5C;AAAqD,IAAA,GAAG,EAAEA,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,GADH;AANJ,CAdc,CAAhB;;AA2BA,MAAMC,gBAAN,SAA+BV,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCW,UADuC,GAC1B,KAD0B;AAAA,SAEvCC,KAFuC,GAE/B;AACNC,MAAAA,IAAI,EAAE;AADA,KAF+B;;AAAA,SAKvCC,SALuC,GAK3B,MAAM;AAChBb,MAAAA,eAAe,GAAGc,IAAlB,CAAwBC,QAAD,IAAc;AACnC,cAAMH,IAAI,GAAGG,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,KAAnB,CAAyBC,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC,CAAb;;AACA,YAAI,KAAKR,UAAT,EAAqB;AACnB,eAAKS,QAAL,CAAc;AAAEP,YAAAA;AAAF,WAAd;AACD;AACF,OALD;AAMD,KAZsC;AAAA;;AAavCQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,UAAL,GAAkB,IAAlB;AACA,SAAKG,SAAL;AACD;;AACDQ,EAAAA,oBAAoB,GAAG;AACrB,SAAKX,UAAL,GAAkB,KAAlB;AACD;;AACDJ,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,OAAO,EAAEL,OADX;AAEE,MAAA,UAAU,EAAE,KAAKU,KAAL,CAAWC,IAFzB;AAGE,MAAA,UAAU,EAAE,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AA5BsC;;AA+BzC,eAAeH,gBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Tag } from \"antd\";\nimport { transactionList } from \"@/api/remoteSearch\";\n\nconst columns = [\n  {\n    title: \"Order_No\",\n    dataIndex: \"order_no\",\n    key: \"order_no\",\n    width: 200,\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n    width: 195,\n    render: text => (`$${text}`),\n  },\n  {\n    title: \"Status\",\n    key: \"tag\",\n    dataIndex: \"tag\",\n    width: 100,\n    render: (tag) => (\n      <Tag color={tag === \"pending\" ? \"magenta\" : \"green\"} key={tag}>\n        {tag}\n      </Tag>\n    ),\n  },\n];\n\nclass TransactionTable extends Component {\n  _isMounted = false;   // 这个变量是用来标志当前组件是否挂载\n  state = {\n    list: [],\n  };\n  fetchData = () => {\n    transactionList().then((response) => {\n      const list = response.data.data.items.slice(0, 13);\n      if (this._isMounted) { \n        this.setState({ list });\n      }\n    });\n  };\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchData();\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  render() {\n    return (\n      <Table\n        columns={columns}\n        dataSource={this.state.list}\n        pagination={false}\n      />\n    );\n  }\n}\n\nexport default TransactionTable;\n"]},"metadata":{},"sourceType":"module"}