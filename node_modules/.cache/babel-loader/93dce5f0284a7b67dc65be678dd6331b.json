{"ast":null,"code":"var _jsxFileName = \"/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/dashboard/components/RaddarChart/index.jsx\";\nimport React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\n\nclass RaddarChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chart: null\n    };\n  }\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n\n    if (nextProps.chartData !== this.props.chartData) {\n      debounce(this.initChart.bind(this), 300)();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n\n    this.setState({\n      chart: null\n    });\n  }\n\n  setOptions() {\n    const animationDuration = 3000;\n    this.state.chart.setOption({\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          // 坐标轴指示器，坐标轴触发有效\n          type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n\n        }\n      },\n      radar: {\n        radius: \"66%\",\n        center: [\"50%\", \"42%\"],\n        splitNumber: 8,\n        splitArea: {\n          areaStyle: {\n            color: \"rgba(127,95,132,.3)\",\n            opacity: 1,\n            shadowBlur: 45,\n            shadowColor: \"rgba(0,0,0,.5)\",\n            shadowOffsetX: 0,\n            shadowOffsetY: 15\n          }\n        },\n        indicator: [{\n          name: \"Sales\",\n          max: 10000\n        }, {\n          name: \"Administration\",\n          max: 20000\n        }, {\n          name: \"Information Techology\",\n          max: 20000\n        }, {\n          name: \"Customer Support\",\n          max: 20000\n        }, {\n          name: \"Development\",\n          max: 20000\n        }, {\n          name: \"Marketing\",\n          max: 20000\n        }]\n      },\n      legend: {\n        left: \"center\",\n        bottom: \"10\",\n        data: [\"Allocated Budget\", \"Expected Spending\", \"Actual Spending\"]\n      },\n      series: [{\n        type: \"radar\",\n        symbolSize: 0,\n        areaStyle: {\n          normal: {\n            shadowBlur: 13,\n            shadowColor: \"rgba(0,0,0,.2)\",\n            shadowOffsetX: 0,\n            shadowOffsetY: 10,\n            opacity: 1\n          }\n        },\n        data: [{\n          value: [5000, 7000, 12000, 11000, 15000, 14000],\n          name: \"Allocated Budget\"\n        }, {\n          value: [4000, 9000, 15000, 15000, 13000, 11000],\n          name: \"Expected Spending\"\n        }, {\n          value: [5500, 11000, 12000, 15000, 12000, 12000],\n          name: \"Actual Spending\"\n        }],\n        animationDuration\n      }]\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({\n      chart: echarts.init(this.el, \"macarons\")\n    }, () => {\n      this.setOptions(this.props.chartData);\n    });\n  }\n\n  render() {\n    const {\n      className,\n      height,\n      width,\n      styles\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      ref: el => this.el = el,\n      style: { ...styles,\n        height,\n        width\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nRaddarChart.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  className: PropTypes.string,\n  styles: PropTypes.object\n};\nRaddarChart.defaultProps = {\n  width: \"100%\",\n  height: \"300px\",\n  styles: {},\n  className: \"\"\n};\nexport default connect(state => state.app)(RaddarChart);","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/dashboard/components/RaddarChart/index.jsx"],"names":["React","Component","PropTypes","connect","echarts","debounce","RaddarChart","state","chart","componentDidMount","initChart","bind","window","addEventListener","resize","componentWillReceiveProps","nextProps","sidebarCollapsed","props","chartData","componentWillUnmount","dispose","removeEventListener","setState","setOptions","animationDuration","setOption","tooltip","trigger","axisPointer","type","radar","radius","center","splitNumber","splitArea","areaStyle","color","opacity","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","indicator","name","max","legend","left","bottom","data","series","symbolSize","normal","value","el","init","render","className","height","width","styles","propTypes","string","object","defaultProps","app"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\n\nclass RaddarChart extends Component {\n  static propTypes = {\n    width: PropTypes.string,\n    height: PropTypes.string,\n    className: PropTypes.string,\n    styles: PropTypes.object,\n  };\n  static defaultProps = {\n    width: \"100%\",\n    height: \"300px\",\n    styles: {},\n    className: \"\",\n  };\n  state = {\n    chart: null,\n  };\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n    if (nextProps.chartData !== this.props.chartData) {\n      debounce(this.initChart.bind(this), 300)();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n    this.setState({ chart: null });\n  }\n\n  setOptions() {\n    const animationDuration = 3000;\n    this.state.chart.setOption({\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          // 坐标轴指示器，坐标轴触发有效\n          type: \"shadow\", // 默认为直线，可选为：'line' | 'shadow'\n        },\n      },\n      radar: {\n        radius: \"66%\",\n        center: [\"50%\", \"42%\"],\n        splitNumber: 8,\n        splitArea: {\n          areaStyle: {\n            color: \"rgba(127,95,132,.3)\",\n            opacity: 1,\n            shadowBlur: 45,\n            shadowColor: \"rgba(0,0,0,.5)\",\n            shadowOffsetX: 0,\n            shadowOffsetY: 15,\n          },\n        },\n        indicator: [\n          { name: \"Sales\", max: 10000 },\n          { name: \"Administration\", max: 20000 },\n          { name: \"Information Techology\", max: 20000 },\n          { name: \"Customer Support\", max: 20000 },\n          { name: \"Development\", max: 20000 },\n          { name: \"Marketing\", max: 20000 },\n        ],\n      },\n      legend: {\n        left: \"center\",\n        bottom: \"10\",\n        data: [\"Allocated Budget\", \"Expected Spending\", \"Actual Spending\"],\n      },\n      series: [\n        {\n          type: \"radar\",\n          symbolSize: 0,\n          areaStyle: {\n            normal: {\n              shadowBlur: 13,\n              shadowColor: \"rgba(0,0,0,.2)\",\n              shadowOffsetX: 0,\n              shadowOffsetY: 10,\n              opacity: 1,\n            },\n          },\n          data: [\n            {\n              value: [5000, 7000, 12000, 11000, 15000, 14000],\n              name: \"Allocated Budget\",\n            },\n            {\n              value: [4000, 9000, 15000, 15000, 13000, 11000],\n              name: \"Expected Spending\",\n            },\n            {\n              value: [5500, 11000, 12000, 15000, 12000, 12000],\n              name: \"Actual Spending\",\n            },\n          ],\n          animationDuration,\n        },\n      ],\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({ chart: echarts.init(this.el, \"macarons\") }, () => {\n      this.setOptions(this.props.chartData);\n    });\n  }\n\n  render() {\n    const { className, height, width, styles } = this.props;\n    return (\n      <div\n        className={className}\n        ref={(el) => (this.el = el)}\n        style={{\n          ...styles,\n          height,\n          width,\n        }}\n      />\n    );\n  }\n}\n\nexport default connect((state) => state.app)(RaddarChart);\n"]},"metadata":{},"sourceType":"module"}