{"ast":null,"code":"var _jsxFileName = \"/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/dashboard/components/LineChart/index.jsx\";\nimport React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\n\nclass LineChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chart: null\n    };\n  }\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n\n    if (nextProps.chartData !== this.props.chartData) {\n      debounce(this.initChart.bind(this), 300)();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n\n    this.setState({\n      chart: null\n    });\n  }\n\n  setOptions({\n    expectedData,\n    actualData\n  } = {}) {\n    this.state.chart.setOption({\n      backgroundColor: \"#fff\",\n      xAxis: {\n        data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n        boundaryGap: false,\n        axisTick: {\n          show: false\n        }\n      },\n      grid: {\n        left: 10,\n        right: 10,\n        bottom: 10,\n        top: 30,\n        containLabel: true\n      },\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"cross\"\n        },\n        padding: [5, 10]\n      },\n      yAxis: {\n        axisTick: {\n          show: false\n        }\n      },\n      legend: {\n        data: [\"expected\", \"actual\"]\n      },\n      series: [{\n        name: \"expected\",\n        itemStyle: {\n          normal: {\n            color: \"#FF005A\",\n            lineStyle: {\n              color: \"#FF005A\",\n              width: 2\n            }\n          }\n        },\n        smooth: true,\n        type: \"line\",\n        data: expectedData,\n        animationDuration: 2800,\n        animationEasing: \"cubicInOut\"\n      }, {\n        name: \"actual\",\n        smooth: true,\n        type: \"line\",\n        itemStyle: {\n          normal: {\n            color: \"#3888fa\",\n            lineStyle: {\n              color: \"#3888fa\",\n              width: 2\n            },\n            areaStyle: {\n              color: \"#f3f8ff\"\n            }\n          }\n        },\n        data: actualData,\n        animationDuration: 2800,\n        animationEasing: \"quadraticOut\"\n      }]\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({\n      chart: echarts.init(this.el, \"macarons\")\n    }, () => {\n      this.setOptions(this.props.chartData);\n    });\n  }\n\n  render() {\n    const {\n      className,\n      height,\n      width,\n      styles\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      ref: el => this.el = el,\n      style: { ...styles,\n        height,\n        width\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nLineChart.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  className: PropTypes.string,\n  styles: PropTypes.object,\n  chartData: PropTypes.object.isRequired\n};\nLineChart.defaultProps = {\n  width: \"100%\",\n  height: \"350px\",\n  styles: {},\n  className: \"\"\n};\nexport default connect(state => state.app)(LineChart);","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/dashboard/components/LineChart/index.jsx"],"names":["React","Component","PropTypes","connect","echarts","debounce","LineChart","state","chart","componentDidMount","initChart","bind","window","addEventListener","resize","componentWillReceiveProps","nextProps","sidebarCollapsed","props","chartData","componentWillUnmount","dispose","removeEventListener","setState","setOptions","expectedData","actualData","setOption","backgroundColor","xAxis","data","boundaryGap","axisTick","show","grid","left","right","bottom","top","containLabel","tooltip","trigger","axisPointer","type","padding","yAxis","legend","series","name","itemStyle","normal","color","lineStyle","width","smooth","animationDuration","animationEasing","areaStyle","el","init","render","className","height","styles","propTypes","string","object","isRequired","defaultProps","app"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\n\nclass LineChart extends Component {\n  static propTypes = {\n    width: PropTypes.string,\n    height: PropTypes.string,\n    className: PropTypes.string,\n    styles: PropTypes.object,\n    chartData: PropTypes.object.isRequired,\n  };\n  static defaultProps = {\n    width: \"100%\",\n    height: \"350px\",\n    styles: {},\n    className: \"\",\n  };\n  state = {\n    chart: null,\n  };\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n    if (nextProps.chartData !== this.props.chartData) {\n      debounce(this.initChart.bind(this), 300)();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n    this.setState({ chart: null });\n  }\n\n  setOptions({ expectedData, actualData } = {}) {\n    this.state.chart.setOption({\n      backgroundColor: \"#fff\",\n      xAxis: {\n        data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n        boundaryGap: false,\n        axisTick: {\n          show: false,\n        },\n      },\n      grid: {\n        left: 10,\n        right: 10,\n        bottom: 10,\n        top: 30,\n        containLabel: true,\n      },\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"cross\",\n        },\n        padding: [5, 10],\n      },\n      yAxis: {\n        axisTick: {\n          show: false,\n        },\n      },\n      legend: {\n        data: [\"expected\", \"actual\"],\n      },\n      series: [\n        {\n          name: \"expected\",\n          itemStyle: {\n            normal: {\n              color: \"#FF005A\",\n              lineStyle: {\n                color: \"#FF005A\",\n                width: 2,\n              },\n            },\n          },\n          smooth: true,\n          type: \"line\",\n          data: expectedData,\n          animationDuration: 2800,\n          animationEasing: \"cubicInOut\",\n        },\n        {\n          name: \"actual\",\n          smooth: true,\n          type: \"line\",\n          itemStyle: {\n            normal: {\n              color: \"#3888fa\",\n              lineStyle: {\n                color: \"#3888fa\",\n                width: 2,\n              },\n              areaStyle: {\n                color: \"#f3f8ff\",\n              },\n            },\n          },\n          data: actualData,\n          animationDuration: 2800,\n          animationEasing: \"quadraticOut\",\n        },\n      ],\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({ chart: echarts.init(this.el,\"macarons\") }, () => {\n      this.setOptions(this.props.chartData);\n    });\n  }\n\n  render() {\n    const { className, height, width,styles } = this.props;\n    return (\n      <div\n        className={className}\n        ref={(el) => (this.el = el)}\n        style={{\n          ...styles,\n          height,\n          width,\n        }}\n      />\n    );\n  }\n}\n\nexport default connect(state=>state.app)(LineChart);\n"]},"metadata":{},"sourceType":"module"}