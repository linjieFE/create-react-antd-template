{"ast":null,"code":"var _jsxFileName = \"/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/charts/keyboard.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\n\nclass KeyboardChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chart: null\n    };\n  }\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n\n    this.setState({\n      chart: null\n    });\n  }\n\n  setOptions() {\n    const xAxisData = [];\n    const data = [];\n    const data2 = [];\n\n    for (let i = 0; i < 50; i++) {\n      xAxisData.push(i);\n      data.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n      data2.push((Math.sin(i / 5) * (i / 5 + 10) + i / 6) * 3);\n    }\n\n    this.state.chart.setOption({\n      backgroundColor: \"#08263a\",\n      grid: {\n        left: \"5%\",\n        right: \"5%\"\n      },\n      xAxis: [{\n        show: false,\n        data: xAxisData\n      }, {\n        show: false,\n        data: xAxisData\n      }],\n      visualMap: {\n        show: false,\n        min: 0,\n        max: 50,\n        dimension: 0,\n        inRange: {\n          color: [\"#4a657a\", \"#308e92\", \"#b1cfa5\", \"#f5d69f\", \"#f5898b\", \"#ef5055\"]\n        }\n      },\n      yAxis: {\n        axisLine: {\n          show: false\n        },\n        axisLabel: {\n          textStyle: {\n            color: \"#4a657a\"\n          }\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            color: \"#08263f\"\n          }\n        },\n        axisTick: {\n          show: false\n        }\n      },\n      series: [{\n        name: \"back\",\n        type: \"bar\",\n        data: data2,\n        z: 1,\n        itemStyle: {\n          normal: {\n            opacity: 0.4,\n            barBorderRadius: 5,\n            shadowBlur: 3,\n            shadowColor: \"#111\"\n          }\n        }\n      }, {\n        name: \"Simulate Shadow\",\n        type: \"line\",\n        data,\n        z: 2,\n        showSymbol: false,\n        animationDelay: 0,\n        animationEasing: \"linear\",\n        animationDuration: 1200,\n        lineStyle: {\n          normal: {\n            color: \"transparent\"\n          }\n        },\n        areaStyle: {\n          normal: {\n            color: \"#08263a\",\n            shadowBlur: 50,\n            shadowColor: \"#000\"\n          }\n        }\n      }, {\n        name: \"front\",\n        type: \"bar\",\n        data,\n        xAxisIndex: 1,\n        z: 3,\n        itemStyle: {\n          normal: {\n            barBorderRadius: 5\n          }\n        }\n      }],\n      animationEasing: \"elasticOut\",\n      animationEasingUpdate: \"elasticOut\",\n\n      animationDelay(idx) {\n        return idx * 20;\n      },\n\n      animationDelayUpdate(idx) {\n        return idx * 20;\n      }\n\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({\n      chart: echarts.init(this.el, \"macarons\")\n    }, () => {\n      this.setOptions();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"calc(100vh - 100px)\"\n      },\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      ref: el => this.el = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => state.app)(KeyboardChart);","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/charts/keyboard.jsx"],"names":["React","Component","connect","echarts","debounce","KeyboardChart","state","chart","componentDidMount","initChart","bind","window","addEventListener","resize","componentWillReceiveProps","nextProps","sidebarCollapsed","props","componentWillUnmount","dispose","removeEventListener","setState","setOptions","xAxisData","data","data2","i","push","Math","sin","setOption","backgroundColor","grid","left","right","xAxis","show","visualMap","min","max","dimension","inRange","color","yAxis","axisLine","axisLabel","textStyle","splitLine","lineStyle","axisTick","series","name","type","z","itemStyle","normal","opacity","barBorderRadius","shadowBlur","shadowColor","showSymbol","animationDelay","animationEasing","animationDuration","areaStyle","xAxisIndex","animationEasingUpdate","idx","animationDelayUpdate","el","init","render","width","height","app"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\nclass KeyboardChart extends Component {\n  state = {\n    chart: null,\n  };\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n    this.setState({ chart: null });\n  }\n\n  setOptions() {\n    const xAxisData = [];\n    const data = [];\n    const data2 = [];\n    for (let i = 0; i < 50; i++) {\n      xAxisData.push(i);\n      data.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n      data2.push((Math.sin(i / 5) * (i / 5 + 10) + i / 6) * 3);\n    }\n    this.state.chart.setOption({\n      backgroundColor: \"#08263a\",\n      grid: {\n        left: \"5%\",\n        right: \"5%\",\n      },\n      xAxis: [\n        {\n          show: false,\n          data: xAxisData,\n        },\n        {\n          show: false,\n          data: xAxisData,\n        },\n      ],\n      visualMap: {\n        show: false,\n        min: 0,\n        max: 50,\n        dimension: 0,\n        inRange: {\n          color: [\n            \"#4a657a\",\n            \"#308e92\",\n            \"#b1cfa5\",\n            \"#f5d69f\",\n            \"#f5898b\",\n            \"#ef5055\",\n          ],\n        },\n      },\n      yAxis: {\n        axisLine: {\n          show: false,\n        },\n        axisLabel: {\n          textStyle: {\n            color: \"#4a657a\",\n          },\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            color: \"#08263f\",\n          },\n        },\n        axisTick: {\n          show: false,\n        },\n      },\n      series: [\n        {\n          name: \"back\",\n          type: \"bar\",\n          data: data2,\n          z: 1,\n          itemStyle: {\n            normal: {\n              opacity: 0.4,\n              barBorderRadius: 5,\n              shadowBlur: 3,\n              shadowColor: \"#111\",\n            },\n          },\n        },\n        {\n          name: \"Simulate Shadow\",\n          type: \"line\",\n          data,\n          z: 2,\n          showSymbol: false,\n          animationDelay: 0,\n          animationEasing: \"linear\",\n          animationDuration: 1200,\n          lineStyle: {\n            normal: {\n              color: \"transparent\",\n            },\n          },\n          areaStyle: {\n            normal: {\n              color: \"#08263a\",\n              shadowBlur: 50,\n              shadowColor: \"#000\",\n            },\n          },\n        },\n        {\n          name: \"front\",\n          type: \"bar\",\n          data,\n          xAxisIndex: 1,\n          z: 3,\n          itemStyle: {\n            normal: {\n              barBorderRadius: 5,\n            },\n          },\n        },\n      ],\n      animationEasing: \"elasticOut\",\n      animationEasingUpdate: \"elasticOut\",\n      animationDelay(idx) {\n        return idx * 20;\n      },\n      animationDelayUpdate(idx) {\n        return idx * 20;\n      },\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({ chart: echarts.init(this.el, \"macarons\") }, () => {\n      this.setOptions();\n    });\n  }\n  render() {\n    return (\n      <div\n        style={{ width: \"100%\", height: \"calc(100vh - 100px)\" }}\n        className=\"app-container\"\n      >\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          ref={(el) => (this.el = el)}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => state.app)(KeyboardChart);\n"]},"metadata":{},"sourceType":"module"}