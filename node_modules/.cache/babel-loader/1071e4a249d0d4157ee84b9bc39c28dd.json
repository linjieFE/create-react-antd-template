{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport splitReactElement from './splitReactElement';\n\nfunction hasChildren(element) {\n  return React.isValidElement(element) && React.Children.count(element.props.children) > 0;\n}\n\nexport default function getElementHTML(element) {\n  var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (element === undefined || element === null) {\n    return element;\n  }\n\n  if (typeof element === 'string') {\n    return element;\n  }\n\n  if (React.isValidElement(element)) {\n    if (hasChildren(element)) {\n      return ReactDOMServer.renderToStaticMarkup(element);\n    }\n\n    var tags = splitReactElement(element);\n\n    if (text !== null && _typeof(tags) === 'object') {\n      var start = tags.start,\n          end = tags.end;\n      return start + text + end;\n    }\n\n    return tags;\n  }\n\n  invariant(Object.prototype.hasOwnProperty.call(element, 'start') && Object.prototype.hasOwnProperty.call(element, 'end'), 'convertToHTML: received conversion data without either an HTML string, ReactElement or an object with start/end tags');\n\n  if (text !== null) {\n    var _start = element.start,\n        _end = element.end;\n    return _start + text + _end;\n  }\n\n  return element;\n}","map":null,"metadata":{},"sourceType":"module"}