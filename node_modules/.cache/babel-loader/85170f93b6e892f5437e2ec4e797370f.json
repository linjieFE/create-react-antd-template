{"ast":null,"code":"import \"antd/es/menu/style/css\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nvar _jsxFileName = \"/Users/flexiv/Desktop/create-react-antd-template/src/components/CustomMenu/CustomMenu.jsx\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass CustomMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openKeys: [],\n      selectedKeys: []\n    };\n\n    this.getOpenKeys = string => {\n      let newStr = \"\",\n          newArr = [],\n          arr = string.split(\"/\").map(i => \"/\" + i);\n\n      for (let i = 1; i < arr.length - 1; i++) {\n        newStr += arr[i];\n        newArr.push(newStr);\n      }\n\n      return newArr;\n    };\n\n    this.onOpenChange = openKeys => {\n      if (openKeys.length === 0 || openKeys.length === 1) {\n        this.setState({\n          openKeys\n        });\n        return;\n      } // 最新展开的 SubMenu\n\n\n      const latestOpenKey = openKeys[openKeys.length - 1]; // 这里与定义的路由规则有关\n\n      if (latestOpenKey.includes(openKeys[0])) {\n        this.setState({\n          openKeys\n        });\n      } else {\n        this.setState({\n          openKeys: [latestOpenKey]\n        });\n      }\n    };\n\n    this.renderMenuItem = ({\n      key,\n      icon,\n      title\n    }) => React.createElement(_Menu.Item, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, icon && React.createElement(_Icon, {\n      type: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, title)));\n\n    this.renderSubMenu = ({\n      key,\n      icon,\n      title,\n      subs\n    }) => {\n      return React.createElement(_Menu.SubMenu, {\n        key: key,\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, icon && React.createElement(_Icon, {\n          type: icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, title)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, subs && subs.map(item => {\n        return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item);\n      }));\n    };\n  }\n\n  // 页面刷新的时候可以定位到 menu 显示\n  componentDidMount() {\n    let pathname = this.props.location.pathname;\n    this.setState({\n      selectedKeys: [pathname],\n      openKeys: this.getOpenKeys(pathname)\n    });\n  } // 点击面包屑导航时 侧边栏同步响应\n\n\n  componentDidUpdate(prevProps, prevState) {\n    let pathname = this.props.location.pathname;\n\n    if (prevProps.location.pathname !== pathname) {\n      this.setState({\n        selectedKeys: [pathname],\n        openKeys: this.getOpenKeys(pathname)\n      });\n    }\n  } // 只展开一个 SubMenu\n\n\n  render() {\n    let _this$state = this.state,\n        openKeys = _this$state.openKeys,\n        selectedKeys = _this$state.selectedKeys;\n    return React.createElement(_Menu, {\n      mode: \"inline\",\n      theme: \"dark\",\n      openKeys: openKeys,\n      selectedKeys: selectedKeys,\n      onClick: ({\n        key\n      }) => this.setState({\n        selectedKeys: [key]\n      }),\n      onOpenChange: this.onOpenChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.props.menu && this.props.menu.map(item => {\n      return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item);\n    }));\n  }\n\n}\n\nexport default withRouter(CustomMenu);","map":{"version":3,"sources":["/Users/flexiv/Desktop/create-react-antd-template/src/components/CustomMenu/CustomMenu.jsx"],"names":["React","Component","Link","withRouter","CustomMenu","state","openKeys","selectedKeys","getOpenKeys","string","newStr","newArr","arr","split","map","i","length","push","onOpenChange","setState","latestOpenKey","includes","renderMenuItem","key","icon","title","renderSubMenu","subs","item","componentDidMount","pathname","props","location","componentDidUpdate","prevProps","prevState","render","menu"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass CustomMenu extends Component {\n  state = {\n    openKeys: [],\n    selectedKeys: []\n  };\n\n  // 处理 pathname\n  getOpenKeys = string => {\n    let newStr = \"\",\n      newArr = [],\n      arr = string.split(\"/\").map(i => \"/\" + i);\n    for (let i = 1; i < arr.length - 1; i++) {\n      newStr += arr[i];\n      newArr.push(newStr);\n    }\n    return newArr;\n  };\n\n  // 页面刷新的时候可以定位到 menu 显示\n  componentDidMount() {\n    let { pathname } = this.props.location;\n    this.setState({\n      selectedKeys: [pathname],\n      openKeys: this.getOpenKeys(pathname)\n    });\n  }\n\n  // 点击面包屑导航时 侧边栏同步响应\n  componentDidUpdate(prevProps, prevState) {\n    let { pathname } = this.props.location;\n    if (prevProps.location.pathname !== pathname) {\n      this.setState({\n        selectedKeys: [pathname],\n        openKeys: this.getOpenKeys(pathname)\n      });\n    }\n  }\n\n  // 只展开一个 SubMenu\n  onOpenChange = openKeys => {\n    if (openKeys.length === 0 || openKeys.length === 1) {\n      this.setState({\n        openKeys\n      });\n      return;\n    }\n\n    // 最新展开的 SubMenu\n    const latestOpenKey = openKeys[openKeys.length - 1];\n\n    // 这里与定义的路由规则有关\n    if (latestOpenKey.includes(openKeys[0])) {\n      this.setState({\n        openKeys\n      });\n    } else {\n      this.setState({\n        openKeys: [latestOpenKey]\n      });\n    }\n  };\n\n  renderMenuItem = ({ key, icon, title }) => (\n    <Menu.Item key={key}>\n      <Link to={key}>\n        {icon && <Icon type={icon} />}\n        <span>{title}</span>\n      </Link>\n    </Menu.Item>\n  );\n\n  // 循环遍历数组中的子项 subs ，生成子级 menu\n  renderSubMenu = ({ key, icon, title, subs }) => {\n    return (\n      <Menu.SubMenu\n        key={key}\n        title={\n          <span>\n            {icon && <Icon type={icon} />}\n            <span>{title}</span>\n          </span>\n        }\n      >\n        {subs &&\n          subs.map(item => {\n            return item.subs && item.subs.length > 0\n              ? this.renderSubMenu(item)\n              : this.renderMenuItem(item);\n          })}\n      </Menu.SubMenu>\n    );\n  };\n\n  render() {\n    let { openKeys, selectedKeys } = this.state;\n    return (\n      <Menu\n        mode=\"inline\"\n        theme=\"dark\"\n        openKeys={openKeys}\n        selectedKeys={selectedKeys}\n        onClick={({ key }) => this.setState({ selectedKeys: [key] })}\n        onOpenChange={this.onOpenChange}\n      >\n        {this.props.menu &&\n          this.props.menu.map(item => {\n            return item.subs && item.subs.length > 0\n              ? this.renderSubMenu(item)\n              : this.renderMenuItem(item);\n          })}\n      </Menu>\n    );\n  }\n}\n\nexport default withRouter(CustomMenu);\n"]},"metadata":{},"sourceType":"module"}