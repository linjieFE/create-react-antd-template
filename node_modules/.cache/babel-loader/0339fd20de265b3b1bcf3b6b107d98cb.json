{"ast":null,"code":"/* eslint-disable */\nrequire('script-loader!file-saver');\n\nimport JSZip from 'jszip';\nexport function export_txt_to_zip(th, jsonData, txtName, zipName) {\n  const zip = new JSZip();\n  const txt_name = txtName || 'file';\n  const zip_name = zipName || 'file';\n  const data = jsonData;\n  let txtData = `${th}\\r\\n`;\n  data.forEach(row => {\n    let tempStr = '';\n    tempStr = row.toString();\n    txtData += `${tempStr}\\r\\n`;\n  });\n  zip.file(`${txt_name}.txt`, txtData);\n  zip.generateAsync({\n    type: \"blob\"\n  }).then(blob => {\n    saveAs(blob, `${zip_name}.zip`);\n  }, err => {\n    alert('导出失败');\n  });\n}","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/lib/Export2Zip.js"],"names":["require","JSZip","export_txt_to_zip","th","jsonData","txtName","zipName","zip","txt_name","zip_name","data","txtData","forEach","row","tempStr","toString","file","generateAsync","type","then","blob","saveAs","err","alert"],"mappings":"AAAA;AACAA,OAAO,CAAC,0BAAD,CAAP;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,QAA/B,EAAyCC,OAAzC,EAAkDC,OAAlD,EAA2D;AAChE,QAAMC,GAAG,GAAG,IAAIN,KAAJ,EAAZ;AACA,QAAMO,QAAQ,GAAGH,OAAO,IAAI,MAA5B;AACA,QAAMI,QAAQ,GAAGH,OAAO,IAAI,MAA5B;AACA,QAAMI,IAAI,GAAGN,QAAb;AACA,MAAIO,OAAO,GAAI,GAAER,EAAG,MAApB;AACAO,EAAAA,IAAI,CAACE,OAAL,CAAcC,GAAD,IAAS;AACpB,QAAIC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,GAAGD,GAAG,CAACE,QAAJ,EAAV;AACAJ,IAAAA,OAAO,IAAK,GAAEG,OAAQ,MAAtB;AACD,GAJD;AAKAP,EAAAA,GAAG,CAACS,IAAJ,CAAU,GAAER,QAAS,MAArB,EAA4BG,OAA5B;AACAJ,EAAAA,GAAG,CAACU,aAAJ,CAAkB;AAChBC,IAAAA,IAAI,EAAE;AADU,GAAlB,EAEGC,IAFH,CAESC,IAAD,IAAU;AAChBC,IAAAA,MAAM,CAACD,IAAD,EAAQ,GAAEX,QAAS,MAAnB,CAAN;AACD,GAJD,EAIIa,GAAD,IAAS;AACVC,IAAAA,KAAK,CAAC,MAAD,CAAL;AACD,GAND;AAOD","sourcesContent":["/* eslint-disable */\nrequire('script-loader!file-saver');\nimport JSZip from 'jszip'\n\nexport function export_txt_to_zip(th, jsonData, txtName, zipName) {\n  const zip = new JSZip()\n  const txt_name = txtName || 'file'\n  const zip_name = zipName || 'file'\n  const data = jsonData\n  let txtData = `${th}\\r\\n`\n  data.forEach((row) => {\n    let tempStr = ''\n    tempStr = row.toString()\n    txtData += `${tempStr}\\r\\n`\n  })\n  zip.file(`${txt_name}.txt`, txtData)\n  zip.generateAsync({\n    type: \"blob\"\n  }).then((blob) => {\n    saveAs(blob, `${zip_name}.zip`)\n  }, (err) => {\n    alert('导出失败')\n  })\n}\n"]},"metadata":{},"sourceType":"module"}