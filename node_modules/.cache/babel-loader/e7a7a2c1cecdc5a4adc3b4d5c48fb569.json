{"ast":null,"code":"import \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nvar _jsxFileName = \"/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/layout/TagsView/components/TagList.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { deleteTag, emptyTaglist, closeOtherTags } from \"@/store/actions\";\n\nclass TagList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.tagListContainer = React.createRef();\n    this.contextMenuContainer = React.createRef();\n    this.state = {\n      left: 0,\n      top: 0,\n      menuVisible: false\n    };\n\n    this.handleClose = tag => {\n      const {\n        history,\n        deleteTag,\n        taglist\n      } = this.props;\n      const path = tag.path;\n      const currentPath = history.location.pathname;\n      const length = taglist.length; // 如果关闭的是当前页，跳转到最后一个tag\n\n      if (path === currentPath) {\n        history.push(taglist[length - 1].path);\n      } // 如果关闭的是最后的tag ,且当前显示的也是最后的tag对应的页面，才做路由跳转\n\n\n      if (path === taglist[length - 1].path && currentPath === taglist[length - 1].path) {\n        // 因为cutTaglist在最后执行，所以跳转到上一个tags的对应的路由，应该-2\n        if (length - 2 > 0) {\n          history.push(taglist[length - 2].path);\n        } else if (length === 2) {\n          history.push(taglist[0].path);\n        }\n      } // 先跳转路由，再修改state树的taglist\n\n\n      deleteTag(tag);\n    };\n\n    this.handleClick = path => {\n      this.props.history.push(path);\n    };\n\n    this.openContextMenu = (tag, event) => {\n      event.preventDefault();\n      const menuMinWidth = 105;\n      const clickX = event.clientX;\n      const clickY = event.clientY; //事件发生时鼠标的Y坐标\n\n      const clientWidth = this.tagListContainer.current.clientWidth; // container width\n\n      const maxLeft = clientWidth - menuMinWidth; // left boundary\n      // 当鼠标点击位置大于左侧边界时，说明鼠标点击的位置偏右，将菜单放在左边\n\n      if (clickX > maxLeft) {\n        this.setState({\n          left: clickX - menuMinWidth + 15,\n          top: clickY,\n          menuVisible: true,\n          currentTag: tag\n        });\n      } else {\n        // 反之，当鼠标点击的位置偏左，将菜单放在右边\n        this.setState({\n          left: clickX,\n          top: clickY,\n          menuVisible: true,\n          currentTag: tag\n        });\n      }\n    };\n\n    this.handleClickOutside = event => {\n      const {\n        menuVisible\n      } = this.state;\n      const isOutside = !(this.contextMenuContainer.current && this.contextMenuContainer.current.contains(event.target));\n\n      if (isOutside && menuVisible) {\n        this.closeContextMenu();\n      }\n    };\n\n    this.handleCloseAllTags = () => {\n      this.props.emptyTaglist();\n      this.props.history.push(\"/dashboard\");\n      this.closeContextMenu();\n    };\n\n    this.handleCloseOtherTags = () => {\n      const currentTag = this.state.currentTag;\n      const {\n        path\n      } = currentTag;\n      this.props.closeOtherTags(currentTag);\n      this.props.history.push(path);\n      this.closeContextMenu();\n    };\n  }\n\n  closeContextMenu() {\n    this.setState({\n      menuVisible: false\n    });\n  }\n\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleClickOutside);\n  }\n\n  render() {\n    const {\n      left,\n      top,\n      menuVisible\n    } = this.state;\n    const {\n      taglist,\n      history\n    } = this.props;\n    const currentPath = history.location.pathname;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Scrollbars, {\n      autoHide: true,\n      autoHideTimeout: 1000,\n      autoHideDuration: 200,\n      hideTracksWhenNotNeeded: true,\n      renderView: props => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        className: \"scrollbar-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      })),\n      renderTrackVertical: props => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        className: \"scrollbar-track-vertical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"tags-wrap\",\n      ref: this.tagListContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, taglist.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n      key: tag.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_Tag, {\n      onClose: this.handleClose.bind(null, tag),\n      closable: tag.path !== \"/dashboard\",\n      color: currentPath === tag.path ? \"geekblue\" : \"gold\",\n      onClick: this.handleClick.bind(null, tag.path),\n      onContextMenu: this.openContextMenu.bind(null, tag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, tag.title))))), menuVisible ? /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"contextmenu\",\n      style: {\n        left: `${left}px`,\n        top: `${top}px`\n      },\n      ref: this.contextMenuContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: this.handleCloseOtherTags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"\\u5173\\u95ED\\u5176\\u4ED6\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: this.handleCloseAllTags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, \"\\u5173\\u95ED\\u6240\\u6709\")) : null);\n  }\n\n}\n\nexport default withRouter(connect(state => state.tagsView, {\n  deleteTag,\n  emptyTaglist,\n  closeOtherTags\n})(TagList));","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/layout/TagsView/components/TagList.jsx"],"names":["React","Component","connect","withRouter","Scrollbars","deleteTag","emptyTaglist","closeOtherTags","TagList","tagListContainer","createRef","contextMenuContainer","state","left","top","menuVisible","handleClose","tag","history","taglist","props","path","currentPath","location","pathname","length","push","handleClick","openContextMenu","event","preventDefault","menuMinWidth","clickX","clientX","clickY","clientY","clientWidth","current","maxLeft","setState","currentTag","handleClickOutside","isOutside","contains","target","closeContextMenu","handleCloseAllTags","handleCloseOtherTags","componentDidMount","document","body","addEventListener","componentWillUnmount","removeEventListener","render","map","bind","title","tagsView"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { Tag } from \"antd\";\nimport { deleteTag, emptyTaglist, closeOtherTags } from \"@/store/actions\";\nclass TagList extends Component {\n  tagListContainer = React.createRef();\n  contextMenuContainer = React.createRef();\n  state = {\n    left: 0,\n    top: 0,\n    menuVisible: false,\n  };\n  handleClose = (tag) => {\n    const { history, deleteTag, taglist } = this.props;\n    const path = tag.path;\n    const currentPath = history.location.pathname;\n    const length = taglist.length;\n    // 如果关闭的是当前页，跳转到最后一个tag\n    if (path === currentPath) {\n      history.push(taglist[length - 1].path);\n    }\n    // 如果关闭的是最后的tag ,且当前显示的也是最后的tag对应的页面，才做路由跳转\n    if (\n      path === taglist[length - 1].path &&\n      currentPath === taglist[length - 1].path\n    ) {\n      // 因为cutTaglist在最后执行，所以跳转到上一个tags的对应的路由，应该-2\n      if (length - 2 > 0) {\n        history.push(taglist[length - 2].path);\n      } else if (length === 2) {\n        history.push(taglist[0].path);\n      }\n    }\n\n    // 先跳转路由，再修改state树的taglist\n    deleteTag(tag);\n  };\n  handleClick = (path) => {\n    this.props.history.push(path);\n  };\n  openContextMenu = (tag, event) => {\n    event.preventDefault();\n    const menuMinWidth = 105;\n    const clickX = event.clientX;\n    const clickY = event.clientY; //事件发生时鼠标的Y坐标\n    const clientWidth = this.tagListContainer.current.clientWidth; // container width\n    const maxLeft = clientWidth - menuMinWidth; // left boundary\n\n    // 当鼠标点击位置大于左侧边界时，说明鼠标点击的位置偏右，将菜单放在左边\n    if (clickX > maxLeft) {\n      this.setState({\n        left: clickX - menuMinWidth + 15,\n        top: clickY,\n        menuVisible: true,\n        currentTag: tag,\n      });\n    } else {\n      // 反之，当鼠标点击的位置偏左，将菜单放在右边\n      this.setState({\n        left: clickX,\n        top: clickY,\n        menuVisible: true,\n        currentTag: tag,\n      });\n    }\n  };\n  handleClickOutside = (event) => {\n    const { menuVisible } = this.state;\n    const isOutside = !(\n      this.contextMenuContainer.current &&\n      this.contextMenuContainer.current.contains(event.target)\n    );\n    if (isOutside && menuVisible) {\n      this.closeContextMenu();\n    }\n  };\n  closeContextMenu() {\n    this.setState({\n      menuVisible: false,\n    });\n  }\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleClickOutside);\n  }\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleClickOutside);\n  }\n  handleCloseAllTags = () => {\n    this.props.emptyTaglist();\n    this.props.history.push(\"/dashboard\");\n    this.closeContextMenu();\n  };\n  handleCloseOtherTags = () => {\n    const currentTag = this.state.currentTag;\n    const { path } = currentTag;\n    this.props.closeOtherTags(currentTag)\n    this.props.history.push(path);\n    this.closeContextMenu();\n  };\n  render() {\n    const { left, top, menuVisible } = this.state;\n    const { taglist, history } = this.props;\n    const currentPath = history.location.pathname;\n    return (\n      <>\n        <Scrollbars\n          autoHide\n          autoHideTimeout={1000}\n          autoHideDuration={200}\n          hideTracksWhenNotNeeded={true}\n          renderView={(props) => (\n            <div {...props} className=\"scrollbar-container\" />\n          )}\n          renderTrackVertical={(props) => (\n            <div {...props} className=\"scrollbar-track-vertical\" />\n          )}\n        >\n          <ul className=\"tags-wrap\" ref={this.tagListContainer}>\n            {taglist.map((tag) => (\n              <li key={tag.path}>\n                <Tag\n                  onClose={this.handleClose.bind(null, tag)}\n                  closable={tag.path !== \"/dashboard\"}\n                  color={currentPath === tag.path ? \"geekblue\" : \"gold\"}\n                  onClick={this.handleClick.bind(null, tag.path)}\n                  onContextMenu={this.openContextMenu.bind(null, tag)}\n                >\n                  {tag.title}\n                </Tag>\n              </li>\n            ))}\n          </ul>\n        </Scrollbars>\n        {menuVisible ? (\n          <ul\n            className=\"contextmenu\"\n            style={{ left: `${left}px`, top: `${top}px` }}\n            ref={this.contextMenuContainer}\n          >\n            <li onClick={this.handleCloseOtherTags}>关闭其他</li>\n            <li onClick={this.handleCloseAllTags}>关闭所有</li>\n          </ul>\n        ) : null}\n      </>\n    );\n  }\n}\nexport default withRouter(\n  connect((state) => state.tagsView, {\n    deleteTag,\n    emptyTaglist,\n    closeOtherTags,\n  })(TagList)\n);\n"]},"metadata":{},"sourceType":"module"}