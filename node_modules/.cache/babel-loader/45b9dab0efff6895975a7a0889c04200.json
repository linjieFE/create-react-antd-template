{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/collapse/style\";\nimport _Collapse from \"antd/es/collapse\";\nvar _jsxFileName = \"/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/excel/exportExcel/index.jsx\";\nimport React, { Component } from \"react\";\nimport { excelList } from \"@/api/excel\";\nconst {\n  Panel\n} = _Collapse;\nconst columns = [{\n  title: \"Id\",\n  dataIndex: \"id\",\n  key: \"id\",\n  width: 200,\n  align: \"center\"\n}, {\n  title: \"Title\",\n  dataIndex: \"title\",\n  key: \"title\",\n  width: 200,\n  align: \"center\"\n}, {\n  title: \"Author\",\n  key: \"author\",\n  dataIndex: \"author\",\n  width: 100,\n  align: \"center\",\n  render: author => /*#__PURE__*/React.createElement(_Tag, {\n    key: author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, author)\n}, {\n  title: \"Readings\",\n  dataIndex: \"readings\",\n  key: \"readings\",\n  width: 195,\n  align: \"center\"\n}, {\n  title: \"Date\",\n  dataIndex: \"date\",\n  key: \"date\",\n  width: 195,\n  align: \"center\"\n}];\n\nclass Excel extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      list: [],\n      filename: \"excel-file\",\n      autoWidth: true,\n      bookType: \"xlsx\",\n      downloadLoading: false,\n      selectedRows: [],\n      selectedRowKeys: []\n    };\n\n    this.fetchData = () => {\n      excelList().then(response => {\n        const list = response.data.data.items;\n\n        if (this._isMounted) {\n          this.setState({\n            list\n          });\n        }\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      this.setState({\n        selectedRows,\n        selectedRowKeys\n      });\n    };\n\n    this.handleDownload = type => {\n      if (type === \"selected\" && this.state.selectedRowKeys.length === 0) {\n        _message.error(\"至少选择一项进行导出\");\n\n        return;\n      }\n\n      this.setState({\n        downloadLoading: true\n      });\n      import(\"@/lib/Export2Excel\").then(excel => {\n        const tHeader = [\"Id\", \"Title\", \"Author\", \"Readings\", \"Date\"];\n        const filterVal = [\"id\", \"title\", \"author\", \"readings\", \"date\"];\n        const list = type === \"all\" ? this.state.list : this.state.selectedRows;\n        const data = this.formatJson(filterVal, list);\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: this.state.filename,\n          autoWidth: this.state.autoWidth,\n          bookType: this.state.bookType\n        });\n        this.setState({\n          selectedRowKeys: [],\n          // 导出完成后将多选框清空\n          downloadLoading: false\n        });\n      });\n    };\n\n    this.filenameChange = e => {\n      this.setState({\n        filename: e.target.value\n      });\n    };\n\n    this.autoWidthChange = e => {\n      this.setState({\n        autoWidth: e.target.value\n      });\n    };\n\n    this.bookTypeChange = value => {\n      this.setState({\n        bookType: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  formatJson(filterVal, jsonData) {\n    return jsonData.map(v => filterVal.map(j => v[j]));\n  }\n\n  render() {\n    const {\n      selectedRowKeys\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Collapse, {\n      defaultActiveKey: [\"1\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Panel, {\n      header: \"\\u5BFC\\u51FA\\u9009\\u9879\",\n      key: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(_Form, {\n      layout: \"inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"\\u6587\\u4EF6\\u540D:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      style: {\n        width: \"250px\"\n      },\n      prefix: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"file\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u6587\\u4EF6\\u540D(\\u9ED8\\u8BA4excel-file)\",\n      onChange: this.filenameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"\\u5355\\u5143\\u683C\\u5BBD\\u5EA6\\u662F\\u5426\\u81EA\\u9002\\u5E94:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_Radio.Group, {\n      onChange: this.autoWidthChange,\n      value: this.state.autoWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Radio, {\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, \"\\u662F\"), /*#__PURE__*/React.createElement(_Radio, {\n      value: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, \"\\u5426\"))), /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"\\u6587\\u4EF6\\u7C7B\\u578B:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_Select, {\n      defaultValue: \"xlsx\",\n      style: {\n        width: 120\n      },\n      onChange: this.bookTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Select.Option, {\n      value: \"xlsx\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, \"xlsx\"), /*#__PURE__*/React.createElement(_Select.Option, {\n      value: \"csv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, \"csv\"), /*#__PURE__*/React.createElement(_Select.Option, {\n      value: \"txt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, \"txt\"))), /*#__PURE__*/React.createElement(_Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      icon: \"file-excel\",\n      onClick: this.handleDownload.bind(null, \"all\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"\\u5168\\u90E8\\u5BFC\\u51FA\")), /*#__PURE__*/React.createElement(_Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      icon: \"file-excel\",\n      onClick: this.handleDownload.bind(null, \"selected\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, \"\\u5BFC\\u51FA\\u5DF2\\u9009\\u62E9\\u9879\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(_Table, {\n      bordered: true,\n      columns: columns,\n      rowKey: record => record.id,\n      dataSource: this.state.list,\n      pagination: false,\n      rowSelection: rowSelection,\n      loading: this.state.downloadLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Excel;","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/excel/exportExcel/index.jsx"],"names":["React","Component","excelList","Panel","columns","title","dataIndex","key","width","align","render","author","Excel","_isMounted","state","list","filename","autoWidth","bookType","downloadLoading","selectedRows","selectedRowKeys","fetchData","then","response","data","items","setState","onSelectChange","handleDownload","type","length","error","excel","tHeader","filterVal","formatJson","export_json_to_excel","header","filenameChange","e","target","value","autoWidthChange","bookTypeChange","componentDidMount","componentWillUnmount","jsonData","map","v","j","rowSelection","onChange","color","bind","record","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAcA,SAASC,SAAT,QAA0B,aAA1B;AACA,MAAM;AAAEC,EAAAA;AAAF,aAAN;AACA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,SAAS,EAAE,IAFb;AAGEC,EAAAA,GAAG,EAAE,IAHP;AAIEC,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,KAAK,EAAE;AALT,CADc,EAQd;AACEJ,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE,OAHP;AAIEC,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,KAAK,EAAE;AALT,CARc,EAed;AACEJ,EAAAA,KAAK,EAAE,QADT;AAEEE,EAAAA,GAAG,EAAE,QAFP;AAGED,EAAAA,SAAS,EAAE,QAHb;AAIEE,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,KAAK,EAAE,QALT;AAMEC,EAAAA,MAAM,EAAGC,MAAD,iBAAY;AAAK,IAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,MAAnB;AANtB,CAfc,EAuBd;AACEN,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,GAAG,EAAE,UAHP;AAIEC,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,KAAK,EAAE;AALT,CAvBc,EA8Bd;AACEJ,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,GAAG,EAAE,MAHP;AAIEC,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,KAAK,EAAE;AALT,CA9Bc,CAAhB;;AAsCA,MAAMG,KAAN,SAAoBX,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BY,UAD4B,GACf,KADe;AAAA,SAE5BC,KAF4B,GAEpB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAE,YAFJ;AAGNC,MAAAA,SAAS,EAAE,IAHL;AAINC,MAAAA,QAAQ,EAAE,MAJJ;AAKNC,MAAAA,eAAe,EAAE,KALX;AAMNC,MAAAA,YAAY,EAAE,EANR;AAONC,MAAAA,eAAe,EAAE;AAPX,KAFoB;;AAAA,SAW5BC,SAX4B,GAWhB,MAAM;AAChBpB,MAAAA,SAAS,GAAGqB,IAAZ,CAAkBC,QAAD,IAAc;AAC7B,cAAMT,IAAI,GAAGS,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,KAAhC;;AACA,YAAI,KAAKb,UAAT,EAAqB;AACnB,eAAKc,QAAL,CAAc;AAAEZ,YAAAA;AAAF,WAAd;AACD;AACF,OALD;AAMD,KAlB2B;;AAAA,SA0B5Ba,cA1B4B,GA0BX,CAACP,eAAD,EAAkBD,YAAlB,KAAmC;AAClD,WAAKO,QAAL,CAAc;AAAEP,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,OAAd;AACD,KA5B2B;;AAAA,SA6B5BQ,cA7B4B,GA6BVC,IAAD,IAAU;AACzB,UAAIA,IAAI,KAAK,UAAT,IAAuB,KAAKhB,KAAL,CAAWO,eAAX,CAA2BU,MAA3B,KAAsC,CAAjE,EAAoE;AAClE,iBAAQC,KAAR,CAAc,YAAd;;AACA;AACD;;AACD,WAAKL,QAAL,CAAc;AACZR,QAAAA,eAAe,EAAE;AADL,OAAd;AAGA,aAAO,oBAAP,EAA6BI,IAA7B,CAAmCU,KAAD,IAAW;AAC3C,cAAMC,OAAO,GAAG,CAAC,IAAD,EAAO,OAAP,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,MAAtC,CAAhB;AACA,cAAMC,SAAS,GAAG,CAAC,IAAD,EAAO,OAAP,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,MAAtC,CAAlB;AACA,cAAMpB,IAAI,GAAGe,IAAI,KAAK,KAAT,GAAiB,KAAKhB,KAAL,CAAWC,IAA5B,GAAmC,KAAKD,KAAL,CAAWM,YAA3D;AACA,cAAMK,IAAI,GAAG,KAAKW,UAAL,CAAgBD,SAAhB,EAA2BpB,IAA3B,CAAb;AACAkB,QAAAA,KAAK,CAACI,oBAAN,CAA2B;AACzBC,UAAAA,MAAM,EAAEJ,OADiB;AAEzBT,UAAAA,IAFyB;AAGzBT,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAHI;AAIzBC,UAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAJG;AAKzBC,UAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI;AALI,SAA3B;AAOA,aAAKS,QAAL,CAAc;AACZN,UAAAA,eAAe,EAAE,EADL;AACS;AACrBF,UAAAA,eAAe,EAAE;AAFL,SAAd;AAID,OAhBD;AAiBD,KAtD2B;;AAAA,SA0D5BoB,cA1D4B,GA0DVC,CAAD,IAAO;AACtB,WAAKb,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAEwB,CAAC,CAACC,MAAF,CAASC;AADP,OAAd;AAGD,KA9D2B;;AAAA,SA+D5BC,eA/D4B,GA+DTH,CAAD,IAAO;AACvB,WAAKb,QAAL,CAAc;AACZV,QAAAA,SAAS,EAAEuB,CAAC,CAACC,MAAF,CAASC;AADR,OAAd;AAGD,KAnE2B;;AAAA,SAoE5BE,cApE4B,GAoEVF,KAAD,IAAW;AAC1B,WAAKf,QAAL,CAAc;AACZT,QAAAA,QAAQ,EAAEwB;AADE,OAAd;AAGD,KAxE2B;AAAA;;AAmB5BG,EAAAA,iBAAiB,GAAG;AAClB,SAAKhC,UAAL,GAAkB,IAAlB;AACA,SAAKS,SAAL;AACD;;AACDwB,EAAAA,oBAAoB,GAAG;AACrB,SAAKjC,UAAL,GAAkB,KAAlB;AACD;;AA8BDuB,EAAAA,UAAU,CAACD,SAAD,EAAYY,QAAZ,EAAsB;AAC9B,WAAOA,QAAQ,CAACC,GAAT,CAAaC,CAAC,IAAId,SAAS,CAACa,GAAV,CAAcE,CAAC,IAAID,CAAC,CAACC,CAAD,CAApB,CAAlB,CAAP;AACD;;AAgBDxC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEW,MAAAA;AAAF,QAAsB,KAAKP,KAAjC;AACA,UAAMqC,YAAY,GAAG;AACnB9B,MAAAA,eADmB;AAEnB+B,MAAAA,QAAQ,EAAE,KAAKxB;AAFI,KAArB;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAU,MAAA,gBAAgB,EAAE,CAAC,GAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAC,0BAAd;AAAqB,MAAA,GAAG,EAAC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,MAAM,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AAAEpB,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,MAAM,eACJ;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAE6C,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAKE,MAAA,WAAW,EAAC,8DALd;AAME,MAAA,QAAQ,EAAE,KAAKd,cANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAWE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAC,+DAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,2BAAO,KAAP;AACE,MAAA,QAAQ,EAAE,KAAKI,eADjB;AAEE,MAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWG,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAO,MAAA,KAAK,EAAE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAO,MAAA,KAAK,EAAE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF,CAXF,eAoBE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,YAAY,EAAC,MADf;AAEE,MAAA,KAAK,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,QAAQ,EAAE,KAAKoC,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,4BAAQ,MAAR;AAAe,MAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,4BAAQ,MAAR;AAAe,MAAA,KAAK,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,eAOE,4BAAQ,MAAR;AAAe,MAAA,KAAK,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF,CApBF,eA+BE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,OAAO,EAAE,KAAKf,cAAL,CAAoByB,IAApB,CAAyB,IAAzB,EAA+B,KAA/B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CA/BF,eAwCE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,OAAO,EAAE,KAAKzB,cAAL,CAAoByB,IAApB,CAAyB,IAAzB,EAA+B,UAA/B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,CAxCF,CADF,CADF,CADF,eAuDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvDF,eAwDE;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,OAAO,EAAElD,OAFX;AAGE,MAAA,MAAM,EAAGmD,MAAD,IAAYA,MAAM,CAACC,EAH7B;AAIE,MAAA,UAAU,EAAE,KAAK1C,KAAL,CAAWC,IAJzB;AAKE,MAAA,UAAU,EAAE,KALd;AAME,MAAA,YAAY,EAAEoC,YANhB;AAOE,MAAA,OAAO,EAAE,KAAKrC,KAAL,CAAWK,eAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxDF,CADF;AAoED;;AAnJ2B;;AAsJ9B,eAAeP,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Table,\n  Tag,\n  Form,\n  Icon,\n  Button,\n  Input,\n  Radio,\n  Select,\n  message,\n  Collapse,\n} from \"antd\";\n\nimport { excelList } from \"@/api/excel\";\nconst { Panel } = Collapse;\nconst columns = [\n  {\n    title: \"Id\",\n    dataIndex: \"id\",\n    key: \"id\",\n    width: 200,\n    align: \"center\",\n  },\n  {\n    title: \"Title\",\n    dataIndex: \"title\",\n    key: \"title\",\n    width: 200,\n    align: \"center\",\n  },\n  {\n    title: \"Author\",\n    key: \"author\",\n    dataIndex: \"author\",\n    width: 100,\n    align: \"center\",\n    render: (author) => <Tag key={author}>{author}</Tag>,\n  },\n  {\n    title: \"Readings\",\n    dataIndex: \"readings\",\n    key: \"readings\",\n    width: 195,\n    align: \"center\",\n  },\n  {\n    title: \"Date\",\n    dataIndex: \"date\",\n    key: \"date\",\n    width: 195,\n    align: \"center\",\n  },\n];\nclass Excel extends Component {\n  _isMounted = false; // 这个变量是用来标志当前组件是否挂载\n  state = {\n    list: [],\n    filename: \"excel-file\",\n    autoWidth: true,\n    bookType: \"xlsx\",\n    downloadLoading: false,\n    selectedRows: [],\n    selectedRowKeys: [],\n  };\n  fetchData = () => {\n    excelList().then((response) => {\n      const list = response.data.data.items;\n      if (this._isMounted) {\n        this.setState({ list });\n      }\n    });\n  };\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchData();\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onSelectChange = (selectedRowKeys, selectedRows) => {\n    this.setState({ selectedRows, selectedRowKeys });\n  };\n  handleDownload = (type) => {\n    if (type === \"selected\" && this.state.selectedRowKeys.length === 0) {\n      message.error(\"至少选择一项进行导出\");\n      return;\n    }\n    this.setState({\n      downloadLoading: true,\n    });\n    import(\"@/lib/Export2Excel\").then((excel) => {\n      const tHeader = [\"Id\", \"Title\", \"Author\", \"Readings\", \"Date\"];\n      const filterVal = [\"id\", \"title\", \"author\", \"readings\", \"date\"];\n      const list = type === \"all\" ? this.state.list : this.state.selectedRows;\n      const data = this.formatJson(filterVal, list);\n      excel.export_json_to_excel({\n        header: tHeader,\n        data,\n        filename: this.state.filename,\n        autoWidth: this.state.autoWidth,\n        bookType: this.state.bookType,\n      });\n      this.setState({\n        selectedRowKeys: [], // 导出完成后将多选框清空\n        downloadLoading: false,\n      });\n    });\n  };\n  formatJson(filterVal, jsonData) {\n    return jsonData.map(v => filterVal.map(j => v[j]))\n  }\n  filenameChange = (e) => {\n    this.setState({\n      filename: e.target.value,\n    });\n  };\n  autoWidthChange = (e) => {\n    this.setState({\n      autoWidth: e.target.value,\n    });\n  };\n  bookTypeChange = (value) => {\n    this.setState({\n      bookType: value,\n    });\n  };\n  render() {\n    const { selectedRowKeys } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    return (\n      <div className=\"app-container\">\n        <Collapse defaultActiveKey={[\"1\"]}>\n          <Panel header=\"导出选项\" key=\"1\">\n            <Form layout=\"inline\">\n              <Form.Item label=\"文件名:\">\n                <Input\n                  style={{ width: \"250px\" }}\n                  prefix={\n                    <Icon type=\"file\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"请输入文件名(默认excel-file)\"\n                  onChange={this.filenameChange}\n                />\n              </Form.Item>\n              <Form.Item label=\"单元格宽度是否自适应:\">\n                <Radio.Group\n                  onChange={this.autoWidthChange}\n                  value={this.state.autoWidth}\n                >\n                  <Radio value={true}>是</Radio>\n                  <Radio value={false}>否</Radio>\n                </Radio.Group>\n              </Form.Item>\n              <Form.Item label=\"文件类型:\">\n                <Select\n                  defaultValue=\"xlsx\"\n                  style={{ width: 120 }}\n                  onChange={this.bookTypeChange}\n                >\n                  <Select.Option value=\"xlsx\">xlsx</Select.Option>\n                  <Select.Option value=\"csv\">csv</Select.Option>\n                  <Select.Option value=\"txt\">txt</Select.Option>\n                </Select>\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  icon=\"file-excel\"\n                  onClick={this.handleDownload.bind(null, \"all\")}\n                >\n                  全部导出\n                </Button>\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  icon=\"file-excel\"\n                  onClick={this.handleDownload.bind(null, \"selected\")}\n                >\n                  导出已选择项\n                </Button>\n              </Form.Item>\n            </Form>\n          </Panel>\n        </Collapse>\n        <br />\n        <Table\n          bordered\n          columns={columns}\n          rowKey={(record) => record.id}\n          dataSource={this.state.list}\n          pagination={false}\n          rowSelection={rowSelection}\n          loading={this.state.downloadLoading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Excel;\n"]},"metadata":{},"sourceType":"module"}