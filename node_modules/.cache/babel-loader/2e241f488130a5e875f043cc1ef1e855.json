{"ast":null,"code":"var _jsxFileName = \"/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/charts/line.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\n\nclass LineChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chart: null\n    };\n  }\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n\n    this.setState({\n      chart: null\n    });\n  }\n\n  setOptions() {\n    this.state.chart.setOption({\n      backgroundColor: \"#394056\",\n      title: {\n        top: 20,\n        text: \"Requests\",\n        textStyle: {\n          fontWeight: \"normal\",\n          fontSize: 16,\n          color: \"#F1F1F3\"\n        },\n        left: \"1%\"\n      },\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          lineStyle: {\n            color: \"#57617B\"\n          }\n        }\n      },\n      legend: {\n        top: 20,\n        icon: \"rect\",\n        itemWidth: 14,\n        itemHeight: 5,\n        itemGap: 13,\n        data: [\"CMCC\", \"CTCC\", \"CUCC\"],\n        right: \"4%\",\n        textStyle: {\n          fontSize: 12,\n          color: \"#F1F1F3\"\n        }\n      },\n      grid: {\n        top: 100,\n        left: \"2%\",\n        right: \"2%\",\n        bottom: \"2%\",\n        containLabel: true\n      },\n      xAxis: [{\n        type: \"category\",\n        boundaryGap: false,\n        axisLine: {\n          lineStyle: {\n            color: \"#57617B\"\n          }\n        },\n        data: [\"13:00\", \"13:05\", \"13:10\", \"13:15\", \"13:20\", \"13:25\", \"13:30\", \"13:35\", \"13:40\", \"13:45\", \"13:50\", \"13:55\"]\n      }],\n      yAxis: [{\n        type: \"value\",\n        name: \"(%)\",\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          lineStyle: {\n            color: \"#57617B\"\n          }\n        },\n        axisLabel: {\n          margin: 10,\n          textStyle: {\n            fontSize: 14\n          }\n        },\n        splitLine: {\n          lineStyle: {\n            color: \"#57617B\"\n          }\n        }\n      }],\n      series: [{\n        name: \"CMCC\",\n        type: \"line\",\n        smooth: true,\n        symbol: \"circle\",\n        symbolSize: 5,\n        showSymbol: false,\n        lineStyle: {\n          normal: {\n            width: 1\n          }\n        },\n        areaStyle: {\n          normal: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: \"rgba(137, 189, 27, 0.3)\"\n            }, {\n              offset: 0.8,\n              color: \"rgba(137, 189, 27, 0)\"\n            }], false),\n            shadowColor: \"rgba(0, 0, 0, 0.1)\",\n            shadowBlur: 10\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: \"rgb(137,189,27)\",\n            borderColor: \"rgba(137,189,2,0.27)\",\n            borderWidth: 12\n          }\n        },\n        data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]\n      }, {\n        name: \"CTCC\",\n        type: \"line\",\n        smooth: true,\n        symbol: \"circle\",\n        symbolSize: 5,\n        showSymbol: false,\n        lineStyle: {\n          normal: {\n            width: 1\n          }\n        },\n        areaStyle: {\n          normal: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: \"rgba(0, 136, 212, 0.3)\"\n            }, {\n              offset: 0.8,\n              color: \"rgba(0, 136, 212, 0)\"\n            }], false),\n            shadowColor: \"rgba(0, 0, 0, 0.1)\",\n            shadowBlur: 10\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: \"rgb(0,136,212)\",\n            borderColor: \"rgba(0,136,212,0.2)\",\n            borderWidth: 12\n          }\n        },\n        data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\n      }, {\n        name: \"CUCC\",\n        type: \"line\",\n        smooth: true,\n        symbol: \"circle\",\n        symbolSize: 5,\n        showSymbol: false,\n        lineStyle: {\n          normal: {\n            width: 1\n          }\n        },\n        areaStyle: {\n          normal: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: \"rgba(219, 50, 51, 0.3)\"\n            }, {\n              offset: 0.8,\n              color: \"rgba(219, 50, 51, 0)\"\n            }], false),\n            shadowColor: \"rgba(0, 0, 0, 0.1)\",\n            shadowBlur: 10\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: \"rgb(219,50,51)\",\n            borderColor: \"rgba(219,50,51,0.2)\",\n            borderWidth: 12\n          }\n        },\n        data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122]\n      }]\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({\n      chart: echarts.init(this.el, \"macarons\")\n    }, () => {\n      this.setOptions();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"calc(100vh - 100px)\"\n      },\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      ref: el => this.el = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => state.app)(LineChart);","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/views/charts/line.jsx"],"names":["React","Component","connect","echarts","debounce","LineChart","state","chart","componentDidMount","initChart","bind","window","addEventListener","resize","componentWillReceiveProps","nextProps","sidebarCollapsed","props","componentWillUnmount","dispose","removeEventListener","setState","setOptions","setOption","backgroundColor","title","top","text","textStyle","fontWeight","fontSize","color","left","tooltip","trigger","axisPointer","lineStyle","legend","icon","itemWidth","itemHeight","itemGap","data","right","grid","bottom","containLabel","xAxis","type","boundaryGap","axisLine","yAxis","name","axisTick","show","axisLabel","margin","splitLine","series","smooth","symbol","symbolSize","showSymbol","normal","width","areaStyle","graphic","LinearGradient","offset","shadowColor","shadowBlur","itemStyle","borderColor","borderWidth","el","init","render","height","app"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport echarts from \"@/lib/echarts\";\nimport { debounce } from \"@/utils\";\nclass LineChart extends Component {\n  state = {\n    chart: null,\n  };\n\n  componentDidMount() {\n    debounce(this.initChart.bind(this), 300)();\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.sidebarCollapsed !== this.props.sidebarCollapsed) {\n      this.resize();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  resize() {\n    const chart = this.state.chart;\n    if (chart) {\n      debounce(chart.resize.bind(this), 300)();\n    }\n  }\n\n  dispose() {\n    if (!this.state.chart) {\n      return;\n    }\n    window.removeEventListener(\"resize\", () => this.resize()); // 移除窗口，变化时重置图表\n    this.setState({ chart: null });\n  }\n\n  setOptions() {\n    this.state.chart.setOption({\n      backgroundColor: \"#394056\",\n      title: {\n        top: 20,\n        text: \"Requests\",\n        textStyle: {\n          fontWeight: \"normal\",\n          fontSize: 16,\n          color: \"#F1F1F3\",\n        },\n        left: \"1%\",\n      },\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          lineStyle: {\n            color: \"#57617B\",\n          },\n        },\n      },\n      legend: {\n        top: 20,\n        icon: \"rect\",\n        itemWidth: 14,\n        itemHeight: 5,\n        itemGap: 13,\n        data: [\"CMCC\", \"CTCC\", \"CUCC\"],\n        right: \"4%\",\n        textStyle: {\n          fontSize: 12,\n          color: \"#F1F1F3\",\n        },\n      },\n      grid: {\n        top: 100,\n        left: \"2%\",\n        right: \"2%\",\n        bottom: \"2%\",\n        containLabel: true,\n      },\n      xAxis: [\n        {\n          type: \"category\",\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: \"#57617B\",\n            },\n          },\n          data: [\n            \"13:00\",\n            \"13:05\",\n            \"13:10\",\n            \"13:15\",\n            \"13:20\",\n            \"13:25\",\n            \"13:30\",\n            \"13:35\",\n            \"13:40\",\n            \"13:45\",\n            \"13:50\",\n            \"13:55\",\n          ],\n        },\n      ],\n      yAxis: [\n        {\n          type: \"value\",\n          name: \"(%)\",\n          axisTick: {\n            show: false,\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#57617B\",\n            },\n          },\n          axisLabel: {\n            margin: 10,\n            textStyle: {\n              fontSize: 14,\n            },\n          },\n          splitLine: {\n            lineStyle: {\n              color: \"#57617B\",\n            },\n          },\n        },\n      ],\n      series: [\n        {\n          name: \"CMCC\",\n          type: \"line\",\n          smooth: true,\n          symbol: \"circle\",\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1,\n            },\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(\n                0,\n                0,\n                0,\n                1,\n                [\n                  {\n                    offset: 0,\n                    color: \"rgba(137, 189, 27, 0.3)\",\n                  },\n                  {\n                    offset: 0.8,\n                    color: \"rgba(137, 189, 27, 0)\",\n                  },\n                ],\n                false\n              ),\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\n              shadowBlur: 10,\n            },\n          },\n          itemStyle: {\n            normal: {\n              color: \"rgb(137,189,27)\",\n              borderColor: \"rgba(137,189,2,0.27)\",\n              borderWidth: 12,\n            },\n          },\n          data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122],\n        },\n        {\n          name: \"CTCC\",\n          type: \"line\",\n          smooth: true,\n          symbol: \"circle\",\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1,\n            },\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(\n                0,\n                0,\n                0,\n                1,\n                [\n                  {\n                    offset: 0,\n                    color: \"rgba(0, 136, 212, 0.3)\",\n                  },\n                  {\n                    offset: 0.8,\n                    color: \"rgba(0, 136, 212, 0)\",\n                  },\n                ],\n                false\n              ),\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\n              shadowBlur: 10,\n            },\n          },\n          itemStyle: {\n            normal: {\n              color: \"rgb(0,136,212)\",\n              borderColor: \"rgba(0,136,212,0.2)\",\n              borderWidth: 12,\n            },\n          },\n          data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150],\n        },\n        {\n          name: \"CUCC\",\n          type: \"line\",\n          smooth: true,\n          symbol: \"circle\",\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1,\n            },\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(\n                0,\n                0,\n                0,\n                1,\n                [\n                  {\n                    offset: 0,\n                    color: \"rgba(219, 50, 51, 0.3)\",\n                  },\n                  {\n                    offset: 0.8,\n                    color: \"rgba(219, 50, 51, 0)\",\n                  },\n                ],\n                false\n              ),\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\n              shadowBlur: 10,\n            },\n          },\n          itemStyle: {\n            normal: {\n              color: \"rgb(219,50,51)\",\n              borderColor: \"rgba(219,50,51,0.2)\",\n              borderWidth: 12,\n            },\n          },\n          data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122],\n        },\n      ],\n    });\n  }\n\n  initChart() {\n    if (!this.el) return;\n    this.setState({ chart: echarts.init(this.el, \"macarons\") }, () => {\n      this.setOptions();\n    });\n  }\n  render() {\n    return (\n      <div\n        style={{ width: \"100%\", height: \"calc(100vh - 100px)\" }}\n        className=\"app-container\"\n      >\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          ref={(el) => (this.el = el)}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => state.app)(LineChart);\n"]},"metadata":{},"sourceType":"module"}