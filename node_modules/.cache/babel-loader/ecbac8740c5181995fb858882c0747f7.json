{"ast":null,"code":"import { setUserToken, resetUser } from \"./user\";\nimport { reqLogin, reqLogout } from \"@/api/login\";\nimport { setToken, removeToken } from \"@/utils/auth\";\nexport const login = (username, password) => dispatch => {\n  return new Promise((resolve, reject) => {\n    reqLogin({\n      username: username.trim(),\n      password: password\n    }).then(response => {\n      const {\n        data\n      } = response;\n\n      if (data.status === 0) {\n        const token = data.token;\n        dispatch(setUserToken(token));\n        setToken(token);\n        resolve(data);\n      } else {\n        const msg = data.message;\n        reject(msg);\n      }\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\nexport const logout = token => dispatch => {\n  return new Promise((resolve, reject) => {\n    reqLogout(token).then(response => {\n      const {\n        data\n      } = response;\n\n      if (data.status === 0) {\n        dispatch(resetUser());\n        removeToken();\n        resolve(data);\n      } else {\n        const msg = data.message;\n        reject(msg);\n      }\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/store/actions/auth.js"],"names":["setUserToken","resetUser","reqLogin","reqLogout","setToken","removeToken","login","username","password","dispatch","Promise","resolve","reject","trim","then","response","data","status","token","msg","message","catch","error","logout"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,SAAvB,QAAwC,QAAxC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAyBC,QAAD,IAAc;AACzD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCV,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,QAAQ,EAAEA,QAAQ,CAACM,IAAT,EAAZ;AAA6BL,MAAAA,QAAQ,EAAEA;AAAvC,KAAD,CAAR,CACGM,IADH,CACSC,QAAD,IAAc;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;;AACA,UAAIC,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,cAAMC,KAAK,GAAGF,IAAI,CAACE,KAAnB;AACAT,QAAAA,QAAQ,CAACT,YAAY,CAACkB,KAAD,CAAb,CAAR;AACAd,QAAAA,QAAQ,CAACc,KAAD,CAAR;AACAP,QAAAA,OAAO,CAACK,IAAD,CAAP;AACD,OALD,MAKO;AACL,cAAMG,GAAG,GAAGH,IAAI,CAACI,OAAjB;AACAR,QAAAA,MAAM,CAACO,GAAD,CAAN;AACD;AACF,KAZH,EAaGE,KAbH,CAaUC,KAAD,IAAW;AAChBV,MAAAA,MAAM,CAACU,KAAD,CAAN;AACD,KAfH;AAgBD,GAjBM,CAAP;AAkBD,CAnBM;AAqBP,OAAO,MAAMC,MAAM,GAAIL,KAAD,IAAYT,QAAD,IAAc;AAC7C,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCT,IAAAA,SAAS,CAACe,KAAD,CAAT,CACGJ,IADH,CACSC,QAAD,IAAc;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;;AACA,UAAIC,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrBR,QAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AACAI,QAAAA,WAAW;AACXM,QAAAA,OAAO,CAACK,IAAD,CAAP;AACD,OAJD,MAIO;AACL,cAAMG,GAAG,GAAGH,IAAI,CAACI,OAAjB;AACAR,QAAAA,MAAM,CAACO,GAAD,CAAN;AACD;AACF,KAXH,EAYGE,KAZH,CAYUC,KAAD,IAAW;AAChBV,MAAAA,MAAM,CAACU,KAAD,CAAN;AACD,KAdH;AAeD,GAhBM,CAAP;AAiBD,CAlBM","sourcesContent":["import { setUserToken, resetUser } from \"./user\";\nimport { reqLogin, reqLogout } from \"@/api/login\";\nimport { setToken, removeToken } from \"@/utils/auth\";\nexport const login = (username, password) => (dispatch) => {\n  return new Promise((resolve, reject) => {\n    reqLogin({ username: username.trim(), password: password })\n      .then((response) => {\n        const { data } = response;\n        if (data.status === 0) {\n          const token = data.token;\n          dispatch(setUserToken(token));\n          setToken(token);\n          resolve(data);\n        } else {\n          const msg = data.message;\n          reject(msg);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const logout = (token) => (dispatch) => {\n  return new Promise((resolve, reject) => {\n    reqLogout(token)\n      .then((response) => {\n        const { data } = response;\n        if (data.status === 0) {\n          dispatch(resetUser());\n          removeToken();\n          resolve(data);\n        } else {\n          const msg = data.message;\n          reject(msg);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n"]},"metadata":{},"sourceType":"module"}