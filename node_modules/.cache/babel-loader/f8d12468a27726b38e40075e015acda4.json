{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/slider/style/css\";\nimport _Slider from \"antd/es/slider\";\nimport \"antd/es/switch/style/css\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/rate/style/css\";\nimport _Rate from \"antd/es/rate\";\nimport \"antd/es/cascader/style/css\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/date-picker/style/css\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/input-number/style/css\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/radio/style/css\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/tooltip/style/css\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/alert/style/css\";\nimport _Alert from \"antd/es/alert\";\nimport \"antd/es/divider/style/css\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport _defineProperty from \"/Users/flexiv/Downloads/react-admin-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/auto-complete/style/css\";\nimport _AutoComplete from \"antd/es/auto-complete\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/flexiv/Downloads/react-admin-master/src/views/FormView/FormBaseView/FormBaseView.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb';\nimport '../../../style/view-style/form.scss';\nconst Option = _Select.Option;\nconst AutoCompleteOption = _AutoComplete.Option;\nconst residences = [{\n  value: 'sichuan',\n  label: '四川',\n  children: [{\n    value: 'chengdu',\n    label: '成都',\n    children: [{\n      value: 'gaoxin',\n      label: '高新区'\n    }]\n  }]\n}, {\n  value: 'gansu',\n  label: '甘肃',\n  children: [{\n    value: 'lanzhou',\n    label: '兰州',\n    children: [{\n      value: 'anning',\n      label: '安宁区'\n    }]\n  }]\n}];\n\nclass FromView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      visible: true\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, fieldsValue) => {\n        if (err) return;\n\n        const values = _objectSpread({}, fieldsValue, {\n          'date-picker': fieldsValue['date-picker'] ? fieldsValue['date-picker'].format('YYYY-MM-DD') : ''\n        });\n\n        console.log('这就是你填好的数据' + values);\n\n        _message.info('你很棒哦,这么快就填好了!');\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入密码不一致!');\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    this.handleWebsiteChange = value => {\n      let autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['@google.com', '@163.com', '@qq.com'].map(domain => \"\".concat(value).concat(domain));\n      }\n\n      this.setState({\n        autoCompleteResult\n      });\n    };\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 16\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 16\n        },\n        sm: {\n          span: 10\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 16,\n          offset: 0\n        },\n        sm: {\n          span: 10,\n          offset: 6\n        }\n      }\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86'\n    })(React.createElement(_Select, {\n      style: {\n        width: 70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"86\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"+86\"), React.createElement(Option, {\n      value: \"87\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"+87\")));\n    const websiteOptions = this.state.autoCompleteResult.map(website => React.createElement(AutoCompleteOption, {\n      key: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, website));\n    return React.createElement(_Layout, {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(CustomBreadcrumb, {\n      arr: ['表单', '基础表单'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"\\u4F55\\u65F6\\u4F7F\\u7528\"), React.createElement(_Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"\\u7528\\u4E8E\\u521B\\u5EFA\\u4E00\\u4E2A\\u5B9E\\u4F53\\u6216\\u6536\\u96C6\\u4FE1\\u606F\\u3002\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"\\u9700\\u8981\\u5BF9\\u8F93\\u5165\\u7684\\u6570\\u636E\\u7C7B\\u578B\\u8FDB\\u884C\\u6821\\u9A8C\\u65F6\\u3002\")), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.visible ? React.createElement(_Alert, {\n      message: \"\\u4F60\\u6700\\u597D\\u8BA4\\u771F\\u7684\\u586B\\u5199\\u8868\\u5355!\",\n      type: \"warning\",\n      closable: true,\n      banner: true,\n      afterClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : null), React.createElement(_Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"\\u57FA\\u7840\\u529F\\u80FD\"), React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"\\u7528\\u6237\\u540D\\xA0\", React.createElement(_Tooltip, {\n        title: \"\\u53EF\\u4EE5\\u5C3D\\u91CF\\u597D\\u542C\\u70B9\\uFF0C\\u771F\\u7684!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: '请输入用户名'\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u6027\\u522B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, getFieldDecorator('sex', {\n      rules: [{\n        required: true,\n        message: '请选择性别'\n      }]\n    })(React.createElement(_Radio.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(_Radio, {\n      value: \"man\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"\\u7537\"), React.createElement(_Radio, {\n      value: \"women\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"\\u5973\"), React.createElement(_Radio, {\n      value: \"unknow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"\\u4E0D\\u8BE6\")))), React.createElement(_Form.Item, {\n      label: \"\\u7231\\u597D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, getFieldDecorator('hobby', {\n      rules: [{\n        required: true,\n        message: '请至少选择一个爱好'\n      }],\n      initialValue: ['A', 'B']\n    })(React.createElement(_Checkbox.Group, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      value: \"A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"A\")), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      disabled: true,\n      value: \"B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"B\")), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      value: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"C\")))))), React.createElement(_Form.Item, {\n      label: \"\\u5E74\\u9F84\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, getFieldDecorator('age', {\n      rules: [{\n        required: true,\n        message: '请输入年龄'\n      }]\n    })(React.createElement(_InputNumber, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5E74\\u9F84\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u51FA\\u751F\\u5E74\\u6708\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, getFieldDecorator('date-picker', {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: '请选择日期'\n      }]\n    })(React.createElement(_DatePicker, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"\\u8BF7\\u9009\\u62E9\\u65E5\\u671F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u90AE\\u7BB1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: '请输入正确的邮箱!'\n      }, {\n        required: true,\n        message: '请输入邮箱'\n      }]\n    })(React.createElement(_AutoComplete, {\n      dataSource: websiteOptions,\n      onChange: this.handleWebsiteChange,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u90AE\\u7BB1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })))), React.createElement(_Form.Item, {\n      label: \"\\u5BC6\\u7801\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码!'\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })(React.createElement(_Input.Password, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, getFieldDecorator('confirm', {\n      rules: [{\n        required: true,\n        message: '请确认密码!'\n      }, {\n        validator: this.compareToFirstPassword\n      }]\n    })(React.createElement(_Input.Password, {\n      onBlur: this.handleConfirmBlur,\n      placeholder: \"\\u8BF7\\u786E\\u8BA4\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u5BB6\\u5EAD\\u4F4F\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, getFieldDecorator('adress', {\n      initialValue: ['sichuan', 'chengdu', 'gaoxin'],\n      rules: [{\n        type: 'array',\n        required: true,\n        message: '请选择住址!'\n      }]\n    })(React.createElement(_Cascader, {\n      options: residences,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\\u4F4F\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u8054\\u7CFB\\u7535\\u8BDD\",\n      extra: \"\\u4F60\\u6700\\u597D\\u5199\\u771F\\u5B9E\\u7684\\u7535\\u8BDD\\u53F7\\u7801.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, getFieldDecorator('phone', {\n      rules: [{\n        required: true,\n        message: '请输入联系电话!'\n      }]\n    })(React.createElement(_Input, {\n      addonBefore: prefixSelector,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u8BC4\\u5206\",\n      extra: \"\\u8FD9\\u4E2A\\u9879\\u76EE\\u600E\\u4E48\\u6837.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, getFieldDecorator('rate', {\n      initialValue: 5\n    })(React.createElement(_Rate, {\n      disabled: true,\n      allowHalf: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, getFieldDecorator('switch', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(_Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, getFieldDecorator('slider', {\n      initialValue: 30\n    })(React.createElement(_Slider, {\n      disabled: getFieldValue('switch') ? false : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), getFieldDecorator('agreement', {\n      valuePropName: 'checked'\n    })(React.createElement(_Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"\\u9605\\u8BFB\\u5E76\\u7406\\u89E3 \", React.createElement(\"a\", {\n      href: \"https://github.com/ltadpoles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"\\u6B64\\u534F\\u8BAE\")))), React.createElement(_Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: getFieldValue('agreement') ? false : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\")))))));\n  }\n\n}\n\nconst WrappedNormalLoginForm = _Form.create({\n  name: 'normal_login'\n})(FromView);\n\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-admin-master/src/views/FormView/FormBaseView/FormBaseView.jsx"],"names":["React","Component","CustomBreadcrumb","Option","AutoCompleteOption","residences","value","label","children","FromView","state","confirmDirty","autoCompleteResult","visible","handleClose","setState","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","fieldsValue","values","format","console","log","info","handleConfirmBlur","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","websiteOptions","website","rules","required","message","type","validator","valuePropName","WrappedNormalLoginForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb'\nimport {\n    Alert,\n    Layout,\n    Row,\n    Col,\n    Divider,\n    Form,\n    Button,\n    Icon,\n    Input,\n    InputNumber,\n    Checkbox,\n    Tooltip,\n    Cascader,\n    Select,\n    DatePicker,\n    Radio,\n    Rate,\n    Switch,\n    Slider,\n    AutoComplete,\n    message\n} from 'antd'\nimport '../../../style/view-style/form.scss'\n\nconst { Option } = Select\nconst AutoCompleteOption = AutoComplete.Option\n\nconst residences = [\n    {\n        value: 'sichuan',\n        label: '四川',\n        children: [\n            {\n                value: 'chengdu',\n                label: '成都',\n                children: [\n                    {\n                        value: 'gaoxin',\n                        label: '高新区'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        value: 'gansu',\n        label: '甘肃',\n        children: [\n            {\n                value: 'lanzhou',\n                label: '兰州',\n                children: [\n                    {\n                        value: 'anning',\n                        label: '安宁区'\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nclass FromView extends Component {\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n        visible: true\n    }\n\n    handleClose = () => {\n        this.setState({ visible: false })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.form.validateFieldsAndScroll((err, fieldsValue) => {\n            if (err) return\n            const values = {\n                ...fieldsValue,\n                'date-picker': fieldsValue['date-picker'] ? fieldsValue['date-picker'].format('YYYY-MM-DD') : ''\n            }\n            console.log('这就是你填好的数据' + values)\n            message.info('你很棒哦,这么快就填好了!')\n        })\n    }\n\n    handleConfirmBlur = e => {\n        const { value } = e.target\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value })\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props\n        if (value && value !== form.getFieldValue('password')) {\n            callback('两次输入密码不一致!')\n        } else {\n            callback()\n        }\n    }\n\n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true })\n        }\n        callback()\n    }\n\n    handleWebsiteChange = value => {\n        let autoCompleteResult\n        if (!value) {\n            autoCompleteResult = []\n        } else {\n            autoCompleteResult = ['@google.com', '@163.com', '@qq.com'].map(domain => `${value}${domain}`)\n        }\n        this.setState({ autoCompleteResult })\n    }\n\n    render() {\n        const { getFieldDecorator, getFieldValue } = this.props.form\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 16 },\n                sm: { span: 6 }\n            },\n            wrapperCol: {\n                xs: { span: 16 },\n                sm: { span: 10 }\n            }\n        }\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 16,\n                    offset: 0\n                },\n                sm: {\n                    span: 10,\n                    offset: 6\n                }\n            }\n        }\n        const prefixSelector = getFieldDecorator('prefix', {\n            initialValue: '86'\n        })(\n            <Select style={{ width: 70 }}>\n                <Option value='86'>+86</Option>\n                <Option value='87'>+87</Option>\n            </Select>\n        )\n\n        const websiteOptions = this.state.autoCompleteResult.map(website => (\n            <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n        ))\n\n        return (\n            <Layout className='animated fadeIn'>\n                <div>\n                    <CustomBreadcrumb arr={['表单', '基础表单']}></CustomBreadcrumb>\n                </div>\n                <div className='base-style'>\n                    <h3>何时使用</h3>\n                    <Divider></Divider>\n                    <p>用于创建一个实体或收集信息。</p>\n                    <p>需要对输入的数据类型进行校验时。</p>\n                </div>\n\n                <Row>\n                    <Col>\n                        <div className='base-style'>\n                            <div>\n                                {this.state.visible ? (\n                                    <Alert\n                                        message='你最好认真的填写表单!'\n                                        type='warning'\n                                        closable\n                                        banner\n                                        afterClose={this.handleClose}\n                                    />\n                                ) : null}\n                            </div>\n                            <Divider orientation='left'>基础功能</Divider>\n                            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                                <Form.Item\n                                    label={\n                                        <span>\n                                            用户名&nbsp;\n                                            <Tooltip title='可以尽量好听点，真的!'>\n                                                <Icon type='question-circle-o' />\n                                            </Tooltip>\n                                        </span>\n                                    }>\n                                    {getFieldDecorator('username', {\n                                        rules: [{ required: true, message: '请输入用户名' }]\n                                    })(<Input placeholder='请输入用户名' />)}\n                                </Form.Item>\n                                <Form.Item label='性别'>\n                                    {getFieldDecorator('sex', {\n                                        rules: [{ required: true, message: '请选择性别' }]\n                                    })(\n                                        <Radio.Group>\n                                            <Radio value='man'>男</Radio>\n                                            <Radio value='women'>女</Radio>\n                                            <Radio value='unknow'>不详</Radio>\n                                        </Radio.Group>\n                                    )}\n                                </Form.Item>\n                                <Form.Item label='爱好'>\n                                    {getFieldDecorator('hobby', {\n                                        rules: [{ required: true, message: '请至少选择一个爱好' }],\n                                        initialValue: ['A', 'B']\n                                    })(\n                                        <Checkbox.Group style={{ width: '100%' }}>\n                                            <Row>\n                                                <Col span={8}>\n                                                    <Checkbox value='A'>A</Checkbox>\n                                                </Col>\n                                                <Col span={8}>\n                                                    <Checkbox disabled value='B'>\n                                                        B\n                                                    </Checkbox>\n                                                </Col>\n                                                <Col span={8}>\n                                                    <Checkbox value='C'>C</Checkbox>\n                                                </Col>\n                                            </Row>\n                                        </Checkbox.Group>\n                                    )}\n                                </Form.Item>\n                                <Form.Item label='年龄'>\n                                    {getFieldDecorator('age', {\n                                        rules: [{ required: true, message: '请输入年龄' }]\n                                    })(<InputNumber placeholder='请输入年龄' style={{ width: '100%' }} />)}\n                                </Form.Item>\n                                <Form.Item label='出生年月'>\n                                    {getFieldDecorator('date-picker', {\n                                        rules: [{ type: 'object', required: true, message: '请选择日期' }]\n                                    })(<DatePicker style={{ width: '100%' }} placeholder='请选择日期' />)}\n                                </Form.Item>\n\n                                <Form.Item label='邮箱'>\n                                    {getFieldDecorator('email', {\n                                        rules: [\n                                            {\n                                                type: 'email',\n                                                message: '请输入正确的邮箱!'\n                                            },\n                                            {\n                                                required: true,\n                                                message: '请输入邮箱'\n                                            }\n                                        ]\n                                    })(\n                                        <AutoComplete\n                                            dataSource={websiteOptions}\n                                            onChange={this.handleWebsiteChange}\n                                            placeholder='请输入邮箱'>\n                                            <Input />\n                                        </AutoComplete>\n                                    )}\n                                </Form.Item>\n                                <Form.Item label='密码' hasFeedback>\n                                    {getFieldDecorator('password', {\n                                        rules: [\n                                            {\n                                                required: true,\n                                                message: '请输入密码!'\n                                            },\n                                            {\n                                                validator: this.validateToNextPassword\n                                            }\n                                        ]\n                                    })(<Input.Password placeholder='请输入密码' />)}\n                                </Form.Item>\n                                <Form.Item label='确认密码' hasFeedback>\n                                    {getFieldDecorator('confirm', {\n                                        rules: [\n                                            {\n                                                required: true,\n                                                message: '请确认密码!'\n                                            },\n                                            {\n                                                validator: this.compareToFirstPassword\n                                            }\n                                        ]\n                                    })(<Input.Password onBlur={this.handleConfirmBlur} placeholder='请确认密码' />)}\n                                </Form.Item>\n                                <Form.Item label='家庭住址'>\n                                    {getFieldDecorator('adress', {\n                                        initialValue: ['sichuan', 'chengdu', 'gaoxin'],\n                                        rules: [{ type: 'array', required: true, message: '请选择住址!' }]\n                                    })(<Cascader options={residences} placeholder='请选择住址' />)}\n                                </Form.Item>\n                                <Form.Item label='联系电话' extra='你最好写真实的电话号码.'>\n                                    {getFieldDecorator('phone', {\n                                        rules: [{ required: true, message: '请输入联系电话!' }]\n                                    })(<Input addonBefore={prefixSelector} />)}\n                                </Form.Item>\n                                <Form.Item label='评分' extra='这个项目怎么样.'>\n                                    {getFieldDecorator('rate', {\n                                        initialValue: 5\n                                    })(<Rate disabled allowHalf />)}\n                                </Form.Item>\n                                <Form.Item label='switch'>\n                                    {getFieldDecorator('switch', {\n                                        valuePropName: 'checked',\n                                        initialValue: true\n                                    })(<Switch />)}\n                                </Form.Item>\n                                <Form.Item label='slider'>\n                                    {getFieldDecorator('slider', {\n                                        initialValue: 30\n                                    })(<Slider disabled={getFieldValue('switch') ? false : true} />)}\n                                </Form.Item>\n                                <Form.Item {...tailFormItemLayout}>\n                                    {getFieldDecorator('agreement', {\n                                        valuePropName: 'checked'\n                                    })(\n                                        <Checkbox>\n                                            阅读并理解 <a href='https://github.com/ltadpoles'>此协议</a>\n                                        </Checkbox>\n                                    )}\n                                </Form.Item>\n                                <Form.Item {...tailFormItemLayout}>\n                                    <Button\n                                        type='primary'\n                                        htmlType='submit'\n                                        disabled={getFieldValue('agreement') ? false : true}>\n                                        注册\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </Col>\n                </Row>\n            </Layout>\n        )\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(FromView)\n\nexport default WrappedNormalLoginForm\n"]},"metadata":{},"sourceType":"module"}