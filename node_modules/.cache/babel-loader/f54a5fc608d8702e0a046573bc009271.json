{"ast":null,"code":"import \"antd/es/menu/style/css\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nvar _jsxFileName = \"/Users/flexiv/Downloads/react-admin-master/src/components/CustomMenu/CustomMenu.jsx\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass CustomMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openKeys: [],\n      selectedKeys: []\n    };\n\n    this.getOpenKeys = string => {\n      let newStr = '',\n          newArr = [],\n          arr = string.split('/').map(i => '/' + i);\n\n      for (let i = 1; i < arr.length - 1; i++) {\n        newStr += arr[i];\n        newArr.push(newStr);\n      }\n\n      return newArr;\n    };\n\n    this.onOpenChange = openKeys => {\n      if (openKeys.length === 0 || openKeys.length === 1) {\n        this.setState({\n          openKeys\n        });\n        return;\n      } // 最新展开的 SubMenu\n\n\n      const latestOpenKey = openKeys[openKeys.length - 1]; // 这里与定义的路由规则有关\n\n      if (latestOpenKey.includes(openKeys[0])) {\n        this.setState({\n          openKeys\n        });\n      } else {\n        this.setState({\n          openKeys: [latestOpenKey]\n        });\n      }\n    };\n\n    this.renderMenuItem = ({\n      key,\n      icon,\n      title\n    }) => React.createElement(_Menu.Item, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, icon && React.createElement(_Icon, {\n      type: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, title)));\n\n    this.renderSubMenu = ({\n      key,\n      icon,\n      title,\n      subs\n    }) => {\n      return React.createElement(_Menu.SubMenu, {\n        key: key,\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, icon && React.createElement(_Icon, {\n          type: icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, title)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, subs && subs.map(item => {\n        return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item);\n      }));\n    };\n  }\n\n  // 页面刷新的时候可以定位到 menu 显示\n  componentDidMount() {\n    let pathname = this.props.location.pathname;\n    this.setState({\n      selectedKeys: [pathname],\n      openKeys: this.getOpenKeys(pathname)\n    });\n  } // 点击面包屑导航时 侧边栏同步响应\n\n\n  componentDidUpdate(prevProps, prevState) {\n    let pathname = this.props.location.pathname;\n\n    if (prevProps.location.pathname !== pathname) {\n      this.setState({\n        selectedKeys: [pathname],\n        openKeys: this.getOpenKeys(pathname)\n      });\n    }\n  } // 只展开一个 SubMenu\n\n\n  render() {\n    let _this$state = this.state,\n        openKeys = _this$state.openKeys,\n        selectedKeys = _this$state.selectedKeys;\n    return React.createElement(_Menu, {\n      mode: \"inline\",\n      theme: \"dark\",\n      openKeys: openKeys,\n      selectedKeys: selectedKeys,\n      onClick: ({\n        key\n      }) => this.setState({\n        selectedKeys: [key]\n      }),\n      onOpenChange: this.onOpenChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.menu && this.props.menu.map(item => {\n      return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item);\n    }));\n  }\n\n}\n\nexport default withRouter(CustomMenu);","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-admin-master/src/components/CustomMenu/CustomMenu.jsx"],"names":["React","Component","Link","withRouter","CustomMenu","state","openKeys","selectedKeys","getOpenKeys","string","newStr","newArr","arr","split","map","i","length","push","onOpenChange","setState","latestOpenKey","includes","renderMenuItem","key","icon","title","renderSubMenu","subs","item","componentDidMount","pathname","props","location","componentDidUpdate","prevProps","prevState","render","menu"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Menu, Icon } from 'antd'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass CustomMenu extends Component {\n    state = {\n        openKeys: [],\n        selectedKeys: []\n    }\n\n    // 处理 pathname\n    getOpenKeys = string => {\n        let newStr = '',\n            newArr = [],\n            arr = string.split('/').map(i => '/' + i)\n        for (let i = 1; i < arr.length - 1; i++) {\n            newStr += arr[i]\n            newArr.push(newStr)\n        }\n        return newArr\n    }\n\n    // 页面刷新的时候可以定位到 menu 显示\n    componentDidMount() {\n        let { pathname } = this.props.location\n        this.setState({\n            selectedKeys: [pathname],\n            openKeys: this.getOpenKeys(pathname)\n        })\n    }\n\n    // 点击面包屑导航时 侧边栏同步响应\n    componentDidUpdate(prevProps, prevState) {\n        let { pathname } = this.props.location\n        if (prevProps.location.pathname !== pathname) {\n            this.setState({\n                selectedKeys: [pathname],\n                openKeys: this.getOpenKeys(pathname)\n            })\n        }\n    }\n\n    // 只展开一个 SubMenu\n    onOpenChange = openKeys => {\n        if (openKeys.length === 0 || openKeys.length === 1) {\n            this.setState({\n                openKeys\n            })\n            return\n        }\n\n        // 最新展开的 SubMenu\n        const latestOpenKey = openKeys[openKeys.length - 1]\n\n        // 这里与定义的路由规则有关\n        if (latestOpenKey.includes(openKeys[0])) {\n            this.setState({\n                openKeys\n            })\n        } else {\n            this.setState({\n                openKeys: [latestOpenKey]\n            })\n        }\n    }\n\n    renderMenuItem = ({ key, icon, title }) => (\n        <Menu.Item key={key}>\n            <Link to={key}>\n                {icon && <Icon type={icon} />}\n                <span>{title}</span>\n            </Link>\n        </Menu.Item>\n    )\n\n    // 循环遍历数组中的子项 subs ，生成子级 menu\n    renderSubMenu = ({ key, icon, title, subs }) => {\n        return (\n            <Menu.SubMenu\n                key={key}\n                title={\n                    <span>\n                        {icon && <Icon type={icon} />}\n                        <span>{title}</span>\n                    </span>\n                }\n            >\n                {subs &&\n                    subs.map(item => {\n                        return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\n                    })}\n            </Menu.SubMenu>\n        )\n    }\n\n    render() {\n        let { openKeys, selectedKeys } = this.state\n        return (\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                openKeys={openKeys}\n                selectedKeys={selectedKeys}\n                onClick={({ key }) => this.setState({ selectedKeys: [key] })}\n                onOpenChange={this.onOpenChange}\n            >\n                {this.props.menu &&\n                    this.props.menu.map(item => {\n                        return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\n                    })}\n            </Menu>\n        )\n    }\n}\n\nexport default withRouter(CustomMenu)\n"]},"metadata":{},"sourceType":"module"}