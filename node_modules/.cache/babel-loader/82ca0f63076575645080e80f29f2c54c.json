{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/divider/style/css\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nvar _jsxFileName = \"/Users/flexiv/Downloads/react-admin-master/src/views/Others/Upload/Upload.jsx\";\nimport React, { Component } from 'react';\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb';\nconst Dragger = _Upload.Dragger;\nconst props = {\n  name: 'file',\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  headers: {\n    authorization: 'authorization-text'\n  },\n\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n\n    if (info.file.status === 'done') {\n      _message.success(\"\".concat(info.file.name, \" file uploaded successfully\"));\n    } else if (info.file.status === 'error') {\n      _message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n    }\n  }\n\n};\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction getBase_64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    _message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    _message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nclass UploadView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      previewVisible: false,\n      previewImage: '',\n      fileList: [{\n        uid: '-1',\n        name: 'image.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '-2',\n        name: 'image.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '-3',\n        name: 'image.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '-4',\n        name: 'image.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '-5',\n        name: 'image.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }]\n    };\n\n    this.handleChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase_64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handle_Change = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n  }\n\n  render() {\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: this.state.loading ? 'loading' : 'plus',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Upload\"));\n    const _this$state = this.state,\n          imageUrl = _this$state.imageUrl,\n          previewVisible = _this$state.previewVisible,\n          previewImage = _this$state.previewImage,\n          fileList = _this$state.fileList;\n    return React.createElement(_Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(CustomBreadcrumb, {\n      arr: ['其它', '上传'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"\\u4F55\\u65F6\\u4F7F\\u7528\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u662F\\u5C06\\u4FE1\\u606F\\uFF08\\u7F51\\u9875\\u3001\\u6587\\u5B57\\u3001\\u56FE\\u7247\\u3001\\u89C6\\u9891\\u7B49\\uFF09\\u901A\\u8FC7\\u7F51\\u9875\\u6216\\u8005\\u4E0A\\u4F20\\u5DE5\\u5177\\u53D1\\u5E03\\u5230\\u8FDC\\u7A0B\\u670D\\u52A1\\u5668\\u4E0A\\u7684\\u8FC7\\u7A0B\")), React.createElement(_Row, {\n      gutter: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(_Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"\\u666E\\u901A\\u6A21\\u5F0F\"), React.createElement(_Upload, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \" Click to Upload\"))), React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(_Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\u7167\\u7247\\u5899\"), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(_Upload, {\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      listType: \"picture-card\",\n      fileList: fileList,\n      onPreview: this.handlePreview,\n      onChange: this.handle_Change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, fileList.length >= 8 ? null : uploadButton), React.createElement(_Modal, {\n      visible: previewVisible,\n      footer: null,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"example\",\n      style: {\n        width: '100%'\n      },\n      src: previewImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))))), React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(_Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"\\u81EA\\u5B9A\\u4E49\\u6A21\\u5F0F\"), React.createElement(_Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : uploadButton)), React.createElement(\"div\", {\n      className: \"base-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(_Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"\\u53EF\\u62D6\\u62FD\\u4E0A\\u4F20\"), React.createElement(Dragger, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"inbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n      className: \"ant-upload-hint\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\"))))));\n  }\n\n}\n\nexport default UploadView;","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-admin-master/src/views/Others/Upload/Upload.jsx"],"names":["React","Component","CustomBreadcrumb","Dragger","props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","success","error","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase_64","Promise","resolve","reject","onload","onerror","beforeUpload","isJpgOrPng","type","isLt2M","size","UploadView","state","loading","previewVisible","previewImage","uid","url","handleChange","setState","originFileObj","imageUrl","handleCancel","handlePreview","preview","handle_Change","render","uploadButton","length","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Layout, Row, Col, Upload, message, Button, Icon, Divider, Modal } from 'antd'\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb'\n\nconst { Dragger } = Upload\n\nconst props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n        authorization: 'authorization-text'\n    },\n    onChange(info) {\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList)\n        }\n        if (info.file.status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully`)\n        } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} file upload failed.`)\n        }\n    }\n}\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => callback(reader.result))\n    reader.readAsDataURL(img)\n}\n\nfunction getBase_64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = error => reject(error)\n    })\n}\n\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!')\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2\n    if (!isLt2M) {\n        message.error('Image must smaller than 2MB!')\n    }\n    return isJpgOrPng && isLt2M\n}\n\nclass UploadView extends Component {\n    state = {\n        loading: false,\n        previewVisible: false,\n        previewImage: '',\n        fileList: [\n            {\n                uid: '-1',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            },\n            {\n                uid: '-2',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            },\n            {\n                uid: '-3',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            },\n            {\n                uid: '-4',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            },\n            {\n                uid: '-5',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            }\n        ]\n    }\n\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true })\n            return\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    imageUrl,\n                    loading: false\n                })\n            )\n        }\n    }\n\n    handleCancel = () => this.setState({ previewVisible: false })\n\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase_64(file.originFileObj)\n        }\n\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true\n        })\n    }\n    handle_Change = ({ fileList }) => this.setState({ fileList })\n\n    render() {\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\n                <div className='ant-upload-text'>Upload</div>\n            </div>\n        )\n        const { imageUrl, previewVisible, previewImage, fileList } = this.state\n        return (\n            <Layout>\n                <div>\n                    <CustomBreadcrumb arr={['其它', '上传']}></CustomBreadcrumb>\n                </div>\n                <div className='base-style'>\n                    <h3>何时使用</h3>\n                    <p>上传是将信息（网页、文字、图片、视频等）通过网页或者上传工具发布到远程服务器上的过程</p>\n                </div>\n                <Row gutter={8}>\n                    <Col span={12}>\n                        <div className='base-style'>\n                            <Divider orientation='left'>普通模式</Divider>\n                            <Upload {...props}>\n                                <Button>\n                                    <Icon type='upload' /> Click to Upload\n                                </Button>\n                            </Upload>\n                        </div>\n                        <div className='base-style'>\n                            <Divider orientation='left'>照片墙</Divider>\n                            <div className='clearfix'>\n                                <Upload\n                                    action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n                                    listType='picture-card'\n                                    fileList={fileList}\n                                    onPreview={this.handlePreview}\n                                    onChange={this.handle_Change}>\n                                    {fileList.length >= 8 ? null : uploadButton}\n                                </Upload>\n                                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                                    <img alt='example' style={{ width: '100%' }} src={previewImage} />\n                                </Modal>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col span={12}>\n                        <div className='base-style'>\n                            <Divider orientation='left'>自定义模式</Divider>\n                            <Upload\n                                name='avatar'\n                                listType='picture-card'\n                                className='avatar-uploader'\n                                showUploadList={false}\n                                action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n                                beforeUpload={beforeUpload}\n                                onChange={this.handleChange}>\n                                {imageUrl ? (\n                                    <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\n                                ) : (\n                                    uploadButton\n                                )}\n                            </Upload>\n                        </div>\n                        <div className='base-style'>\n                            <Divider orientation='left'>可拖拽上传</Divider>\n                            <Dragger {...props}>\n                                <p className='ant-upload-drag-icon'>\n                                    <Icon type='inbox' />\n                                </p>\n                                <p className='ant-upload-text'>Click or drag file to this area to upload</p>\n                                <p className='ant-upload-hint'>\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data\n                                    or other band files\n                                </p>\n                            </Dragger>\n                        </div>\n                    </Col>\n                </Row>\n            </Layout>\n        )\n    }\n}\n\nexport default UploadView\n"]},"metadata":{},"sourceType":"module"}