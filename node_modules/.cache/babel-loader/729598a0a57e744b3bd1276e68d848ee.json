{"ast":null,"code":"import * as types from \"../action-types\";\nconst initState = {\n  taglist: []\n};\nexport default function app(state = initState, action) {\n  switch (action.type) {\n    case types.TAGSVIEW_ADD_TAG:\n      const tag = action.tag;\n\n      if (state.taglist.includes(tag)) {\n        return state;\n      } else {\n        return { ...state,\n          taglist: [...state.taglist, tag]\n        };\n      }\n\n    case types.TAGSVIEW_DELETE_TAG:\n      return { ...state,\n        taglist: [...state.taglist.filter(item => item !== action.tag)]\n      };\n\n    case types.TAGSVIEW_EMPTY_TAGLIST:\n      return { ...state,\n        taglist: [...state.taglist.filter(item => item.path === \"/dashboard\")]\n      };\n\n    case types.TAGSVIEW_CLOSE_OTHER_TAGS:\n      return { ...state,\n        taglist: [...state.taglist.filter(item => item.path === \"/dashboard\" || item === action.tag)]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/store/reducers/tagsView.js"],"names":["types","initState","taglist","app","state","action","type","TAGSVIEW_ADD_TAG","tag","includes","TAGSVIEW_DELETE_TAG","filter","item","TAGSVIEW_EMPTY_TAGLIST","path","TAGSVIEW_CLOSE_OTHER_TAGS"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,iBAAvB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE;AADO,CAAlB;AAGA,eAAe,SAASC,GAAT,CAAaC,KAAK,GAAGH,SAArB,EAAgCI,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,gBAAX;AACE,YAAMC,GAAG,GAAGH,MAAM,CAACG,GAAnB;;AACA,UAAIJ,KAAK,CAACF,OAAN,CAAcO,QAAd,CAAuBD,GAAvB,CAAJ,EAAiC;AAC/B,eAAOJ,KAAP;AACD,OAFD,MAEO;AACL,eAAO,EACL,GAAGA,KADE;AAELF,UAAAA,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAmBM,GAAnB;AAFJ,SAAP;AAID;;AACH,SAAKR,KAAK,CAACU,mBAAX;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAN,CAAcS,MAAd,CAAsBC,IAAD,IAAUA,IAAI,KAAKP,MAAM,CAACG,GAA/C,CAAJ;AAFJ,OAAP;;AAIF,SAAKR,KAAK,CAACa,sBAAX;AACE,aAAO,EACL,GAAGT,KADE;AAELF,QAAAA,OAAO,EAAE,CACP,GAAGE,KAAK,CAACF,OAAN,CAAcS,MAAd,CAAsBC,IAAD,IAAUA,IAAI,CAACE,IAAL,KAAc,YAA7C,CADI;AAFJ,OAAP;;AAMF,SAAKd,KAAK,CAACe,yBAAX;AACE,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,OAAO,EAAE,CACP,GAAGE,KAAK,CAACF,OAAN,CAAcS,MAAd,CAAsBC,IAAD,IAAUA,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,KAAKP,MAAM,CAACG,GAA7E,CADI;AAFJ,OAAP;;AAMF;AACE,aAAOJ,KAAP;AA/BJ;AAiCD","sourcesContent":["import * as types from \"../action-types\";\nconst initState = {\n  taglist: [],\n};\nexport default function app(state = initState, action) {\n  switch (action.type) {\n    case types.TAGSVIEW_ADD_TAG:\n      const tag = action.tag;\n      if (state.taglist.includes(tag)) {\n        return state;\n      } else {\n        return {\n          ...state,\n          taglist: [...state.taglist, tag],\n        };\n      }\n    case types.TAGSVIEW_DELETE_TAG:\n      return {\n        ...state,\n        taglist: [...state.taglist.filter((item) => item !== action.tag)],\n      };\n    case types.TAGSVIEW_EMPTY_TAGLIST:\n      return {\n        ...state,\n        taglist: [\n          ...state.taglist.filter((item) => item.path === \"/dashboard\"),\n        ],\n      };\n    case types.TAGSVIEW_CLOSE_OTHER_TAGS:\n      return {\n        ...state,\n        taglist: [\n          ...state.taglist.filter((item) => item.path === \"/dashboard\" || item === action.tag),\n        ],\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}