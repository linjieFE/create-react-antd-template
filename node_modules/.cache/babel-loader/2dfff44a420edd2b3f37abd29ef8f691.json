{"ast":null,"code":"export function debounce(func, wait, immediate) {\n  let timeout, args, context, timestamp, result;\n\n  const later = function () {\n    // 据上一次触发时间间隔\n    const last = +new Date() - timestamp; // 上次被包装函数被调用时间间隔 last 小于设定时间间隔 wait\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null; // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function (...args) {\n    context = this;\n    timestamp = +new Date();\n    const callNow = immediate && !timeout; // 如果延时不存在，重新设定延时\n\n    if (!timeout) timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n} // 根据某个属性值从MenuList查找拥有该属性值的menuItem\n\nexport function getMenuItemInMenuListByProperty(menuList, key, value) {\n  let stack = [];\n  stack = stack.concat(menuList);\n  let res;\n\n  while (stack.length) {\n    let cur = stack.shift();\n\n    if (cur.children && cur.children.length > 0) {\n      stack = cur.children.concat(stack);\n    }\n\n    if (value === cur[key]) {\n      res = cur;\n    }\n  }\n\n  return res;\n}\n/**\n * @description 将时间戳转换为年-月-日-时-分-秒格式\n * @param {String} timestamp\n * @returns {String} 年-月-日-时-分-秒\n */\n\nexport function timestampToTime(timestamp) {\n  var date = new Date(timestamp);\n  var Y = date.getFullYear() + '-';\n  var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n  var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';\n  var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n  var m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n  var s = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();\n  let strDate = Y + M + D + h + m + s;\n  return strDate;\n}","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/utils/index.js"],"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","setTimeout","apply","callNow","getMenuItemInMenuListByProperty","menuList","key","value","stack","concat","res","length","cur","shift","children","timestampToTime","date","Y","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","strDate"],"mappings":"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","sourcesContent":["export function debounce(func, wait, immediate) {\n  let timeout, args, context, timestamp, result;\n\n  const later = function () {\n    // 据上一次触发时间间隔\n    const last = +new Date() - timestamp;\n\n    // 上次被包装函数被调用时间间隔 last 小于设定时间间隔 wait\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function (...args) {\n    context = this;\n    timestamp = +new Date();\n    const callNow = immediate && !timeout;\n    // 如果延时不存在，重新设定延时\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n}\n// 根据某个属性值从MenuList查找拥有该属性值的menuItem\nexport function getMenuItemInMenuListByProperty(menuList, key, value) {\n  let stack = [];\n  stack = stack.concat(menuList);\n  let res;\n  while (stack.length) {\n    let cur = stack.shift();\n    if (cur.children && cur.children.length > 0) {\n      stack = cur.children.concat(stack);\n    }\n    if (value === cur[key]) {\n      res = cur;\n    }\n  }\n  return res;\n}\n\n/**\n * @description 将时间戳转换为年-月-日-时-分-秒格式\n * @param {String} timestamp\n * @returns {String} 年-月-日-时-分-秒\n */\n\nexport function timestampToTime(timestamp) {\n  var date = new Date(timestamp);\n  var Y = date.getFullYear() + '-';\n  var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\n  var D = (date.getDate() < 10 ? '0'+date.getDate() : date.getDate()) + ' ';\n  var h = (date.getHours() < 10 ? '0'+date.getHours() : date.getHours()) + ':';\n  var m = (date.getMinutes() < 10 ? '0'+date.getMinutes() : date.getMinutes()) + ':';\n  var s = (date.getSeconds() < 10 ? '0'+date.getSeconds() : date.getSeconds());\n  \n  let strDate = Y+M+D+h+m+s;\n  return strDate;\n}"]},"metadata":{},"sourceType":"module"}