{"ast":null,"code":"import * as types from \"../action-types\";\nimport { reqUserInfo } from \"@/api/user\";\nexport const getUserInfo = token => dispatch => {\n  return new Promise((resolve, reject) => {\n    reqUserInfo(token).then(response => {\n      const {\n        data\n      } = response;\n\n      if (data.status === 0) {\n        const userInfo = data.userInfo;\n        dispatch(setUserInfo(userInfo));\n        resolve(data);\n      } else {\n        const msg = data.message;\n        reject(msg);\n      }\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\nexport const setUserToken = token => {\n  return {\n    type: types.USER_SET_USER_TOKEN,\n    token\n  };\n};\nexport const setUserInfo = userInfo => {\n  return {\n    type: types.USER_SET_USER_INFO,\n    ...userInfo\n  };\n};\nexport const resetUser = () => {\n  return {\n    type: types.USER_RESET_USER\n  };\n};","map":{"version":3,"sources":["/Users/flexiv/Downloads/react-antd-admin-template-master/src/store/actions/user.js"],"names":["types","reqUserInfo","getUserInfo","token","dispatch","Promise","resolve","reject","then","response","data","status","userInfo","setUserInfo","msg","message","catch","error","setUserToken","type","USER_SET_USER_TOKEN","USER_SET_USER_INFO","resetUser","USER_RESET_USER"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAYC,QAAD,IAAc;AAClD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,IAAAA,WAAW,CAACE,KAAD,CAAX,CACGK,IADH,CACSC,QAAD,IAAc;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;;AACA,UAAIC,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,cAAMC,QAAQ,GAAGF,IAAI,CAACE,QAAtB;AACAR,QAAAA,QAAQ,CAACS,WAAW,CAACD,QAAD,CAAZ,CAAR;AACAN,QAAAA,OAAO,CAACI,IAAD,CAAP;AACD,OAJD,MAIO;AACL,cAAMI,GAAG,GAAGJ,IAAI,CAACK,OAAjB;AACAR,QAAAA,MAAM,CAACO,GAAD,CAAN;AACD;AACF,KAXH,EAYGE,KAZH,CAYUC,KAAD,IAAW;AAChBV,MAAAA,MAAM,CAACU,KAAD,CAAN;AACD,KAdH;AAeD,GAhBM,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMC,YAAY,GAAIf,KAAD,IAAW;AACrC,SAAO;AACLgB,IAAAA,IAAI,EAAEnB,KAAK,CAACoB,mBADP;AAELjB,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMU,WAAW,GAAID,QAAD,IAAc;AACvC,SAAO;AACLO,IAAAA,IAAI,EAAEnB,KAAK,CAACqB,kBADP;AAEL,OAAGT;AAFE,GAAP;AAID,CALM;AAOP,OAAO,MAAMU,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLH,IAAAA,IAAI,EAAEnB,KAAK,CAACuB;AADP,GAAP;AAGD,CAJM","sourcesContent":["import * as types from \"../action-types\";\nimport { reqUserInfo } from \"@/api/user\";\n\nexport const getUserInfo = (token) => (dispatch) => {\n  return new Promise((resolve, reject) => {\n    reqUserInfo(token)\n      .then((response) => {\n        const { data } = response;\n        if (data.status === 0) {\n          const userInfo = data.userInfo;\n          dispatch(setUserInfo(userInfo));\n          resolve(data);\n        } else {\n          const msg = data.message;\n          reject(msg);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const setUserToken = (token) => {\n  return {\n    type: types.USER_SET_USER_TOKEN,\n    token,\n  };\n};\n\nexport const setUserInfo = (userInfo) => {\n  return {\n    type: types.USER_SET_USER_INFO,\n    ...userInfo,\n  };\n};\n\nexport const resetUser = () => {\n  return {\n    type: types.USER_RESET_USER,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}